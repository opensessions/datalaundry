#pragma checksum "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f87e9da0088504db5aec2e94c1cf0aaf284e5545"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FeedProvider_SchedulerSettings), @"mvc.1.0.view", @"/Views/FeedProvider/SchedulerSettings.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/FeedProvider/SchedulerSettings.cshtml", typeof(AspNetCore.Views_FeedProvider_SchedulerSettings))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/_ViewImports.cshtml"
using DataLaundryApp;

#line default
#line hidden
#line 2 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/_ViewImports.cshtml"
using DataLaundryApp.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f87e9da0088504db5aec2e94c1cf0aaf284e5545", @"/Views/FeedProvider/SchedulerSettings.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e53a07086c94b630cf9c3f8d7b30af59307c9434", @"/Views/_ViewImports.cshtml")]
    public class Views_FeedProvider_SchedulerSettings : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DataLaundryApp.ViewModels.vmSchedulerSettings>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
  
    ViewBag.Title = "Scheduler Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(151, 106, true);
            WriteLiteral("\r\n<div class=\"row wrapper border-bottom white-bg page-heading\">\r\n    <div class=\"col-lg-10\">\r\n        <h2>");
            EndContext();
            BeginContext(258, 13, false);
#line 9 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
       Write(ViewBag.Title);

#line default
#line hidden
            EndContext();
            BeginContext(271, 76, true);
            WriteLiteral("</h2>\r\n        <ol class=\"breadcrumb\">\r\n            <li>\r\n                <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 347, "\"", 389, 1);
#line 12 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
WriteAttributeValue("", 354, Url.Action("Index","FeedProvider"), 354, 35, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(390, 97, true);
            WriteLiteral(">Feed Providers</a>\r\n            </li>\r\n            <li class=\"active\">\r\n                <strong>");
            EndContext();
            BeginContext(488, 13, false);
#line 15 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                   Write(ViewBag.Title);

#line default
#line hidden
            EndContext();
            BeginContext(501, 127, true);
            WriteLiteral("</strong>\r\n            </li>\r\n        </ol>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"wrapper wrapper-content animated fadeInRight\">\r\n");
            EndContext();
#line 22 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
     if (ViewBag.ErrorMessage != null)
    {

#line default
#line hidden
            BeginContext(675, 54, true);
            WriteLiteral("        <div class=\"alert alert-danger\">\r\n            ");
            EndContext();
            BeginContext(730, 20, false);
#line 25 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
       Write(ViewBag.ErrorMessage);

#line default
#line hidden
            EndContext();
            BeginContext(750, 18, true);
            WriteLiteral("\r\n        </div>\r\n");
            EndContext();
#line 27 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
    }
    else
    {
        if (Model != null && Model?.FeedProvider?.Id > 0)
        {
            

#line default
#line hidden
            BeginContext(875, 44, false);
#line 32 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
       Write(Html.Partial("_Details", Model.FeedProvider));

#line default
#line hidden
            EndContext();
            BeginContext(923, 183, true);
            WriteLiteral("            <div class=\"ibox\">\r\n                <div class=\"ibox-title\">\r\n                    <h5>Settings</h5>\r\n                    <div class=\"clearfix\">\r\n                        <a");
            EndContext();
            BeginWriteAttribute("href", " href=\'", 1106, "\'", 1195, 1);
#line 38 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
WriteAttributeValue("", 1113, Url.Action("ViewSchedulerLog", "FeedProvider", new { id = Model.FeedProvider.Id}), 1113, 82, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1196, 214, true);
            WriteLiteral(" class=\"btn btn-primary pull-right\"><i class=\"fa fa-gear\"></i> View Log</a>                        \r\n                    </div>\r\n                </div>\r\n                <div class=\"ibox-content\" id=\"jsSelection\">\r\n");
            EndContext();
#line 42 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                     using (Html.BeginForm("EditSchedulerSettings", "FeedProvider", FormMethod.Post))
                    {
                        

#line default
#line hidden
            BeginContext(1561, 23, false);
#line 44 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                   Write(Html.AntiForgeryToken());

#line default
#line hidden
            EndContext();
            BeginContext(1637, 43, false);
#line 46 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                   Write(Html.Hidden("SchedulerSettingId", Model.Id));

#line default
#line hidden
            EndContext();
            BeginContext(1707, 38, false);
#line 47 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                   Write(Html.HiddenFor(m => m.FeedProvider.Id));

#line default
#line hidden
            EndContext();
            BeginContext(1772, 38, false);
#line 48 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                   Write(Html.HiddenFor(m => m.liStartDateTime));

#line default
#line hidden
            EndContext();
            BeginContext(1837, 39, false);
#line 49 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                   Write(Html.HiddenFor(m => m.liExpiryDateTime));

#line default
#line hidden
            EndContext();
            BeginContext(1904, 290, true);
            WriteLiteral(@"                        <div class=""row"">
                            <div class=""col-md-6"">
                                <label>Start Date</label>
                                <div class=""form-group input-group date"" id=""datetimepickerStart"">
                                    ");
            EndContext();
            BeginContext(2195, 122, false);
#line 55 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                               Write(Html.TextBoxFor(model => model.strStartDateTime, new { @class="form-control", @maxlength = "255", @autocomplete = "off" }));

#line default
#line hidden
            EndContext();
            BeginContext(2317, 347, true);
            WriteLiteral(@"
                                    <span class=""input-group-addon"">
                                        <i class=""glyphicon glyphicon-calendar""></i>
                                    </span>
                                </div>

                                <div style=""margin-top: -15px;"">
                                    ");
            EndContext();
            BeginContext(2665, 94, false);
#line 62 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                               Write(Html.ValidationMessageFor(model => model.strStartDateTime, "", new { @class = "text-danger" }));

#line default
#line hidden
            EndContext();
            BeginContext(2759, 340, true);
            WriteLiteral(@"
                                </div>
                            </div>
                            <div class=""col-md-6"">
                                <label>Expiry Date</label>&nbsp;(optional)
                                <div class=""form-group input-group date"" id=""datetimepickerEnd"">
                                    ");
            EndContext();
            BeginContext(3100, 125, false);
#line 68 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                               Write(Html.TextBoxFor(model => model.strExpiryDateTime, new { @class = "form-control", @maxlength = "255", @autocomplete = "off" }));

#line default
#line hidden
            EndContext();
            BeginContext(3225, 347, true);
            WriteLiteral(@"
                                    <span class=""input-group-addon"">
                                        <i class=""glyphicon glyphicon-calendar""></i>
                                    </span>
                                </div>

                                <div style=""margin-top: -15px;"">
                                    ");
            EndContext();
            BeginContext(3573, 95, false);
#line 75 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                               Write(Html.ValidationMessageFor(model => model.strExpiryDateTime, "", new { @class = "text-danger" }));

#line default
#line hidden
            EndContext();
            BeginContext(3668, 110, true);
            WriteLiteral("\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n");
            EndContext();
            BeginContext(3780, 32, true);
            WriteLiteral("                        <hr />\r\n");
            EndContext();
            BeginContext(3814, 95, true);
            WriteLiteral("                        <div class=\"row\">\r\n                            <div class=\"col-md-3\">\r\n");
            EndContext();
#line 84 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                 if (ViewBag.lstSchedulerFrequency != null)
                                {

#line default
#line hidden
            BeginContext(4021, 57, true);
            WriteLiteral("                                    <div class=\"radio\">\r\n");
            EndContext();
#line 87 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                         for (int i = 0; i < ViewBag.lstSchedulerFrequency.Count; i++)
                                        {

#line default
#line hidden
            BeginContext(4225, 179, true);
            WriteLiteral("                                            <div class=\"form-group\">\r\n                                                <label>\r\n                                                    ");
            EndContext();
            BeginContext(4405, 191, false);
#line 91 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                               Write(Html.RadioButtonFor(m => m.SchedulerFrequencyId, (int)ViewBag.lstSchedulerFrequency[i].Id,new{@class="jsRadioButtonSchedulerFrequency",@data_indexid=(int)ViewBag.lstSchedulerFrequency[i].Id}));

#line default
#line hidden
            EndContext();
            BeginContext(4596, 54, true);
            WriteLiteral("\r\n                                                    ");
            EndContext();
            BeginContext(4652, 37, false);
#line 92 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                                Write(ViewBag.lstSchedulerFrequency[i].Name);

#line default
#line hidden
            EndContext();
            BeginContext(4690, 112, true);
            WriteLiteral("\r\n                                                </label>\r\n                                            </div>\r\n");
            EndContext();
#line 95 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                        }

#line default
#line hidden
            BeginContext(4845, 44, true);
            WriteLiteral("                                    </div>\r\n");
            EndContext();
#line 97 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                }

#line default
#line hidden
            BeginContext(4924, 161, true);
            WriteLiteral("\r\n                            </div>\r\n\r\n                            <div class=\"col-md-9\">\r\n                                <div id=\"dvSchedulerFrequency_Hourly\"");
            EndContext();
            BeginWriteAttribute("style", " style=\"", 5085, "\"", 5154, 2);
            WriteAttributeValue("", 5093, "display:", 5093, 8, true);
#line 102 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
WriteAttributeValue(" ", 5101, Model.SchedulerFrequencyId == 2 ? "block": "none", 5102, 52, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5155, 169, true);
            WriteLiteral(">\r\n                                    <div class=\"form-group\">\r\n                                        <div>\r\n                                            Recur Every: ");
            EndContext();
            BeginContext(5325, 135, false);
#line 105 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                                    Write(Html.TextBoxFor(m => m.RecurranceIntervalHours, new { @type = "number", @class = "form-control inline-textbox jsNumeric", @min = "1" }));

#line default
#line hidden
            EndContext();
            BeginContext(5460, 96, true);
            WriteLiteral(" hours\r\n                                        </div>\r\n                                        ");
            EndContext();
            BeginContext(5557, 93, false);
#line 107 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                   Write(Html.ValidationMessageFor(m => m.RecurranceIntervalHours, "", new { @class = "text-danger" }));

#line default
#line hidden
            EndContext();
            BeginContext(5650, 156, true);
            WriteLiteral("\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div id=\"dvSchedulerFrequency_Daily\"");
            EndContext();
            BeginWriteAttribute("style", " style=\"", 5806, "\"", 5875, 2);
            WriteAttributeValue("", 5814, "display:", 5814, 8, true);
#line 111 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
WriteAttributeValue(" ", 5822, Model.SchedulerFrequencyId == 3 ? "block": "none", 5823, 52, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5876, 169, true);
            WriteLiteral(">\r\n                                    <div class=\"form-group\">\r\n                                        <div>\r\n                                            Recur Every: ");
            EndContext();
            BeginContext(6046, 130, false);
#line 114 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                                    Write(Html.TextBoxFor(m => m.RecurranceIntervalDays, new { @type="number", @class = "form-control inline-textbox jsNumeric", @min="1" }));

#line default
#line hidden
            EndContext();
            BeginContext(6176, 95, true);
            WriteLiteral(" days\r\n                                        </div>\r\n                                        ");
            EndContext();
            BeginContext(6272, 92, false);
#line 116 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                   Write(Html.ValidationMessageFor(m => m.RecurranceIntervalDays, "", new { @class = "text-danger" }));

#line default
#line hidden
            EndContext();
            BeginContext(6364, 157, true);
            WriteLiteral("\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div id=\"dvSchedulerFrequency_Weekly\"");
            EndContext();
            BeginWriteAttribute("style", " style=\"", 6521, "\"", 6590, 2);
            WriteAttributeValue("", 6529, "display:", 6529, 8, true);
#line 120 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
WriteAttributeValue(" ", 6537, Model.SchedulerFrequencyId == 4 ? "block": "none", 6538, 52, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(6591, 169, true);
            WriteLiteral(">\r\n                                    <div class=\"form-group\">\r\n                                        <div>\r\n                                            Recur Every: ");
            EndContext();
            BeginContext(6761, 135, false);
#line 123 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                                    Write(Html.TextBoxFor(m => m.RecurranceIntervalWeeks, new { @type = "number", @class = "form-control inline-textbox jsNumeric", @min = "1" }));

#line default
#line hidden
            EndContext();
            BeginContext(6896, 100, true);
            WriteLiteral(" weeks on:\r\n                                        </div>\r\n                                        ");
            EndContext();
            BeginContext(6997, 93, false);
#line 125 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                   Write(Html.ValidationMessageFor(m => m.RecurranceIntervalWeeks, "", new { @class = "text-danger" }));

#line default
#line hidden
            EndContext();
            BeginContext(7090, 191, true);
            WriteLiteral("\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <table class=\"table table-nonbordered\">\r\n");
            EndContext();
#line 130 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                             for (int i = 0; i < Model.RecurranceDaysInWeekSelectList.Count; i++)
                                            {
                                                if (i == 0 || i % 4 == 0)
                                                {

#line default
#line hidden
            BeginContext(7569, 52, true);
            WriteLiteral("                                                    ");
            EndContext();
            BeginContext(7623, 7, true);
            WriteLiteral(" <tr>\r\n");
            EndContext();
#line 135 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                                }


#line default
#line hidden
            BeginContext(7683, 255, true);
            WriteLiteral("                                                <td>\r\n                                                    <div class=\"checkbox\">\r\n                                                        <label>\r\n                                                            ");
            EndContext();
            BeginContext(7939, 73, false);
#line 140 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                                       Write(Html.CheckBoxFor(m => Model.RecurranceDaysInWeekSelectList[i].IsSelected));

#line default
#line hidden
            EndContext();
            BeginContext(8012, 62, true);
            WriteLiteral("\r\n                                                            ");
            EndContext();
            BeginContext(8075, 66, false);
#line 141 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                                       Write(Html.DisplayFor(m => Model.RecurranceDaysInWeekSelectList[i].Name));

#line default
#line hidden
            EndContext();
            BeginContext(8141, 183, true);
            WriteLiteral("\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </td>\r\n");
            EndContext();
#line 145 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"

                                                if ((i + 1) % 4 == 0 || i == Model.RecurranceDaysInWeekSelectList.Count - 1)
                                                {

#line default
#line hidden
            BeginContext(8503, 52, true);
            WriteLiteral("                                                    ");
            EndContext();
            BeginContext(8557, 8, true);
            WriteLiteral(" </tr>\r\n");
            EndContext();
#line 149 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                                }
                                            }

#line default
#line hidden
            BeginContext(8663, 380, true);
            WriteLiteral(@"                                        </table>
                                        <div>
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                </div>

                                <div id=""dvSchedulerFrequency_Monthly""");
            EndContext();
            BeginWriteAttribute("style", " style=\"", 9043, "\"", 9112, 2);
            WriteAttributeValue("", 9051, "display:", 9051, 8, true);
#line 158 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
WriteAttributeValue(" ", 9059, Model.SchedulerFrequencyId == 5 ? "block": "none", 9060, 52, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(9113, 169, true);
            WriteLiteral(">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Months:</label>\r\n                                        ");
            EndContext();
            BeginContext(9283, 113, false);
#line 161 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                   Write(Html.ListBoxFor(m => m.SelectedMonths, Model.RecurranceMonthsSelectList, new { @class = "form-control listBox" }));

#line default
#line hidden
            EndContext();
            BeginContext(9396, 379, true);
            WriteLiteral(@"

                                        <div>
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>

                                    <div class=""form-group"">
                                        <label>
                                            ");
            EndContext();
            BeginContext(9776, 72, false);
#line 170 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                       Write(Html.RadioButton("MonthlyOptions", "Days", Model.IsDatesSelectedInMonth));

#line default
#line hidden
            EndContext();
            BeginContext(9848, 150, true);
            WriteLiteral("\r\n                                            Days:\r\n                                        </label>\r\n\r\n                                        <span");
            EndContext();
            BeginWriteAttribute("style", " style=\"", 9998, "\"", 10065, 2);
            WriteAttributeValue("", 10006, "display:", 10006, 8, true);
#line 174 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
WriteAttributeValue(" ", 10014, Model.IsDatesSelectedInMonth ? "inline": "none", 10015, 50, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(10066, 47, true);
            WriteLiteral(">\r\n                                            ");
            EndContext();
            BeginContext(10114, 126, false);
#line 175 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                       Write(Html.ListBoxFor(m => m.SelectedDatesInMonth, Model.RecurranceDatesInMonthsSelectList, new { @class = "form-control listBox" }));

#line default
#line hidden
            EndContext();
            BeginContext(10240, 428, true);
            WriteLiteral(@"
                                        </span>

                                        <div>
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>

                                    <div class=""form-group"">
                                        <label>
                                            ");
            EndContext();
            BeginContext(10669, 71, false);
#line 185 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                       Write(Html.RadioButton("MonthlyOptions", "On", !Model.IsDatesSelectedInMonth));

#line default
#line hidden
            EndContext();
            BeginContext(10740, 148, true);
            WriteLiteral("\r\n                                            On:\r\n                                        </label>\r\n\r\n                                        <span");
            EndContext();
            BeginWriteAttribute("style", " style=\"", 10888, "\"", 10956, 2);
            WriteAttributeValue("", 10896, "display:", 10896, 8, true);
#line 189 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
WriteAttributeValue(" ", 10904, !Model.IsDatesSelectedInMonth ? "inline": "none", 10905, 51, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(10957, 47, true);
            WriteLiteral(">\r\n                                            ");
            EndContext();
            BeginContext(11005, 115, false);
#line 190 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                       Write(Html.ListBoxFor(m => m.SelectedWeekNos, Model.RecurranceWeekNosSelectList, new { @class = "form-control listBox" }));

#line default
#line hidden
            EndContext();
            BeginContext(11120, 46, true);
            WriteLiteral("\r\n                                            ");
            EndContext();
            BeginContext(11167, 137, false);
#line 191 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                       Write(Html.ListBoxFor(m => m.SelectedDaysInWeekForMonth, Model.RecurranceDaysInWeekForMonthSelectList, new { @class = "form-control listBox" }));

#line default
#line hidden
            EndContext();
            BeginContext(11304, 379, true);
            WriteLiteral(@"
                                        </span>

                                        <div>
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
");
            EndContext();
            BeginContext(11685, 32, true);
            WriteLiteral("                        <hr />\r\n");
            EndContext();
            BeginContext(11719, 263, true);
            WriteLiteral(@"                        <div class=""row"">
                            <div class=""col-md-12"">
                                <div class=""form-group"">
                                    <div class=""checkbox"">
                                        <label>
");
            EndContext();
#line 209 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                             if(Model.Id > 0)
                                            {
                                                

#line default
#line hidden
            BeginContext(12141, 38, false);
#line 211 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                           Write(Html.CheckBoxFor(m => Model.IsEnabled));

#line default
#line hidden
            EndContext();
#line 211 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                                                                       
                                            }
                                            else
                                            {
                                                

#line default
#line hidden
            BeginContext(12374, 31, false);
#line 215 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                           Write(Html.CheckBox("IsEnabled",true));

#line default
#line hidden
            EndContext();
#line 215 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                                                                
                                            }                                            

#line default
#line hidden
            BeginContext(12498, 255, true);
            WriteLiteral("                                            Enabled\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n");
            EndContext();
            BeginContext(12755, 212, true);
            WriteLiteral("                        <div class=\"form-group clearfix\">\r\n                            <input id=\"btnSave\" type=\"button\" class=\"btn btn-lg btn-primary pull-right\" value=\"Save\" />\r\n                        </div>\r\n");
            EndContext();
#line 227 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                    }

#line default
#line hidden
            BeginContext(12990, 44, true);
            WriteLiteral("                </div>\r\n            </div>\r\n");
            EndContext();
#line 230 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
        }
        else
        {

#line default
#line hidden
            BeginContext(13070, 112, true);
            WriteLiteral("            <div class=\"alert alert-danger\">\r\n                Scheduler Settings not found\r\n            </div>\r\n");
            EndContext();
#line 236 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
        }
    }

#line default
#line hidden
            BeginContext(13200, 101, true);
            WriteLiteral("\r\n    <div id=\"SessionTimeoutDialog\" class=\"modal\" style=\"overflow: hidden;\">\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(13318, 140, true);
                WriteLiteral("\r\n    <script>\r\n        $(document).ready(function()\r\n        {           \r\n            $(\".jsRadioButtonSchedulerFrequency[data-indexid=\'\"+");
                EndContext();
                BeginContext(13460, 26, false);
#line 247 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                                            Write(Model.SchedulerFrequencyId);

#line default
#line hidden
                EndContext();
                BeginContext(13487, 10222, true);
                WriteLiteral(@"+""']"").prop(""checked"",true);
        });
        $(function () {
            var id = $(""#SchedulerSettingId"").val();
            var strStartDateTime = '';
            var strEndDateTime = '';
            var startDate = null;
            var endDate = null;

            if (id != null && id != '' && id != '0') {
                strStartDateTime = moment.unix($(""#liStartDateTime"").val()).format('DD/MM/YYYY hh:mm A');
                startDate = new Date(moment.unix($(""#liStartDateTime"").val()));
            }

            if ($(""#liExpiryDateTime"").val() != '') {
                strEndDateTime = moment.unix($(""#liExpiryDateTime"").val()).format('DD/MM/YYYY hh:mm A');
                endDate = new Date(moment.unix($(""#liExpiryDateTime"").val()));
            }

            $(""#strStartDateTime"").val(strStartDateTime);
            $(""#strExpiryDateTime"").val(strEndDateTime);

            $('.listBox').multiselect({
                includeSelectAllOption: true,
                maxHeight: 2");
                WriteLiteral(@"00,
                dropUp: true
            });

            $('#datetimepickerStart').datetimepicker({
                sideBySide: true,
                format: 'DD/MM/YYYY hh:mm A',
                useCurrent: false,
                //minDate: (startDate || new Date()),
                widgetPositioning: {
                    vertical: 'bottom',
                    horizontal: 'auto'
                }
            });

            $('#datetimepickerEnd').datetimepicker({
                sideBySide: true,
                format: 'DD/MM/YYYY hh:mm A',
                useCurrent: false,
                //minDate: new Date(),
                widgetPositioning: {
                    vertical: 'bottom',
                    horizontal: 'auto'
                }
            });

            if (startDate)
                $('#datetimepickerEnd').data(""DateTimePicker"").minDate(startDate);

            if (endDate)
                $('#datetimepickerStart').data(""DateTimePicker"").maxDate(en");
                WriteLiteral(@"dDate);            

            $(""#datetimepickerStart"").on(""dp.change"", function (e) {
                $('#datetimepickerEnd').data(""DateTimePicker"").minDate(e.date);
            });

            $(""#datetimepickerEnd"").on(""dp.change"", function (e) {
                $('#datetimepickerStart').data(""DateTimePicker"").maxDate(e.date);
            });

            $(""input[name=MonthlyOptions"").change(function () {
                $(""input[name=MonthlyOptions"").parent().next(""span"").hide();
                $(this).parent().next(""span"").show();
            });

            $(""input[name='SchedulerFrequencyId']"").click(function () {               
                var value = parseInt($(this).val());
                var str = '';

                if (value == 2)
                    str = 'Hourly';
                else if (value == 3)
                    str = 'Daily';
                else if (value == 4)
                    str = 'Weekly';
                else if (value == 5)
            ");
                WriteLiteral(@"        str = 'Monthly';

                $(""div[id^='dvSchedulerFrequency'"").hide();
                if (str != '')
                    $(""#dvSchedulerFrequency_"" + str).show();
            });

            $(""#btnSave"").click(function () {                
                var isValid = true;
                var data = {};
                
                var id = $(""#SchedulerSettingId"").val();
                var feedProviderId = $(""#FeedProvider_Id"").val();
                var strStartDateTime = $(""#strStartDateTime"").val();
                var strExpiryDate = $(""#strExpiryDateTime"").val();
                var schedulerFrequencyId = parseInt($(""input[name='SchedulerFrequencyId']:checked"").val());
                var isEnabled = $(""#IsEnabled"").prop('checked');
                var recurranceIntervalHours = $(""#RecurranceIntervalHours"").val();
                var recurranceIntervalDays = $(""#RecurranceIntervalDays"").val();
                var recurranceIntervalWeeks = $(""#RecurranceInterva");
                WriteLiteral(@"lWeeks"").val();
                var selectedRecurranceDaysInWeek = $('table input[id^=RecurranceDaysInWeekSelectList]:checked').length;
                var monthlyOptions = $(""input[name='MonthlyOptions']:checked"").val()
                var selectedDaysInWeek = [];
                var selectedMonths = $(""#SelectedMonths"").val();
                var selectedDatesInMonth = $(""#SelectedDatesInMonth"").val();
                var selectedWeekNos = $(""#SelectedWeekNos"").val();
                var selectedDaysInWeekForMonth = $(""#SelectedDaysInWeekForMonth"").val();

                clearErrorMessages();

                if (strStartDateTime == '') {
                    isValid = false;
                    $(""#strStartDateTime"").closest('.form-group').next().find('.text-danger').text(""Please select start date"");
                }
                else {
                    var startDate = new Date(ChangeDateFormat(strStartDateTime, '', 'DD/MMM/YYYY hh:mm A'))
                    $(""#liStartDateTime"").v");
                WriteLiteral(@"al(moment(startDate).unix());

                    data.liStartDateTime = moment(startDate).unix();
                }
                
                if (schedulerFrequencyId == '')
                    isValid = false;
                else
                    data.SchedulerFrequencyId = schedulerFrequencyId;

                if (strExpiryDate != '') {
                    var endDate = new Date(ChangeDateFormat(strExpiryDate, '', 'DD/MMM/YYYY hh:mm A'));
                    $(""#liExpiryDateTime"").val(moment(endDate).unix());
                    data.liExpiryDateTime = moment(endDate).unix();
                }
                
                if (schedulerFrequencyId == 2) {
                    //hourly
                    if (recurranceIntervalHours == '') {
                        isValid = false;
                        $(""#RecurranceIntervalHours"").closest('.form-group').find('.text-danger').text(""This field is required"");
                    }

                    if (isValid)
    ");
                WriteLiteral(@"                    data.RecurranceIntervalHours = recurranceIntervalHours;
                }
                if (schedulerFrequencyId == 3) {
                    //daily
                    if (recurranceIntervalDays == '') {
                        isValid = false;
                        $(""#RecurranceIntervalDays"").closest('.form-group').find('.text-danger').text(""This field is required"");
                    }

                    if (isValid)
                        data.RecurranceIntervalDays = recurranceIntervalDays;
                }
                else if (schedulerFrequencyId == 4) {
                    //weekly

                    if (recurranceIntervalWeeks == '') {
                        isValid = false;
                        $(""#RecurranceIntervalWeeks"").closest('.form-group').find('.text-danger').text(""This field is required"");
                    }

                    if (selectedRecurranceDaysInWeek == 0) {
                        isValid = false;
                ");
                WriteLiteral(@"        $(""input[name^='RecurranceDaysInWeekSelectList'"").closest('.form-group').find('.text-danger').text(""Please select at least one day"");
                    }
                    
                    if (isValid) {
                        $('table input[id^=RecurranceDaysInWeekSelectList]:checked').each(function () {
                            selectedDaysInWeek.push($.trim($(this).parent().text()));
                        });

                        data.RecurranceIntervalWeeks = recurranceIntervalWeeks;
                        data.SelectedDaysInWeek = selectedDaysInWeek;
                    }
                }
                else if (schedulerFrequencyId == 5) {
                    //monthly
                    
                    if (selectedMonths == null || selectedMonths.length == 0) {
                        isValid = false;
                        $(""#SelectedMonths"").closest('.form-group').find('.text-danger').text(""Please select at least one month"");
                    ");
                WriteLiteral(@"}

                    if (isValid)
                        data.SelectedMonths = selectedMonths;

                    if (monthlyOptions.toLowerCase() == 'days') {
                        if (selectedDatesInMonth == null || selectedDatesInMonth.length == 0) {
                            isValid = false;
                            $(""#SelectedDatesInMonth"").closest('.form-group').find('.text-danger').text(""Please select at least one date"");
                        }

                        if (isValid)
                            data.SelectedDatesInMonth = selectedDatesInMonth;
                    }
                    else if (monthlyOptions.toLowerCase() == 'on') {
                        if (selectedWeekNos == null || selectedWeekNos.length == 0 || selectedDaysInWeekForMonth == null || selectedDaysInWeekForMonth.length == 0) {
                            isValid = false;

                            if (selectedWeekNos == null || selectedWeekNos.length == 0)
                          ");
                WriteLiteral(@"      $(""#SelectedWeekNos"").closest('.form-group').find('.text-danger').text(""Please select at least one week number and one day in the week"");

                            if (selectedDaysInWeekForMonth == null || selectedDaysInWeekForMonth.length == 0)
                                $(""#SelectedDaysInWeekForMonth"").closest('.form-group').find('.text-danger').text(""Please select at least one week number and one day in the week"");
                        }

                        if (isValid) {
                            data.SelectedWeekNos = selectedWeekNos;
                            data.SelectedDaysInWeekForMonth = selectedDaysInWeekForMonth;
                        }
                        
                    }
                }

                data.IsEnabled = isEnabled;

                if (!isValid)
                    return;
                
                data.Id = id;
                data.FeedProviderId = feedProviderId;

                var url = '");
                EndContext();
                BeginContext(23710, 51, false);
#line 468 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                      Write(Url.Action("EditSchedulerSettings", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(23761, 648, true);
                WriteLiteral(@"';

                $.ajax({
                    url: url,
                    type: ""POST"",
                    data: { ""model"": data },
                    success: function (data) {
                        if (data.status == true) {
                            location.reload(true);
                        }
                        else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        if (jqXhr.status == 401) {
                            $(""#SessionTimeoutDialog"").load('");
                EndContext();
                BeginContext(24411, 44, false);
#line 484 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/SchedulerSettings.cshtml"
                                                         Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(24456, 2648, true);
                WriteLiteral(@"/', function (response, status, xhr) {
                                $(""#SessionTimeoutDialog"").dialog(""open"");
                            });
                        }
                        else
                            toastr.error(""Something went wrong. Please try again soon."");
                    }
                    //error: function (reponse) {
                    //    toastr.error(""Something went wrong. Please try again soon."");
                    //}
                });
            });

            $('#SessionTimeoutDialog').dialog({
                autoOpen: false,
                width: 410,
                left: 465,
                resizable: false,
                title: 'Login',
                modal: true,
                open: function (event, ui) {
                    changeDialogPosition();
                    $('#frmLoginPopup').validate({
                        rules: {
                            Email: {
                                required: true");
                WriteLiteral(@"
                            },
                            Password: {
                                required: true
                            }
                        },
                        messages: {
                            Email: {
                                required: ""This field is required.""
                            },
                            Password: {
                                required: ""This field is required.""
                            }
                        }
                    });
                }
            });
        });

        function clearErrorMessages() {
            $(""#strStartDateTime"").closest('.form-group').next().find('.text-danger').text('');
            $(""#RecurranceIntervalDays"").closest('.form-group').find('.text-danger').text('');
            $(""#RecurranceIntervalWeeks"").closest('.form-group').find('.text-danger').text('');
            $(""input[name^='RecurranceDaysInWeekSelectList'"").closest('table').parent().fin");
                WriteLiteral(@"d('.text-danger').text('');
            $(""#SelectedMonths"").closest('.form-group').find('.text-danger').text('');
            $(""#SelectedDatesInMonth"").closest('.form-group').find('.text-danger').text('');
            $(""#SelectedWeekNos"").closest('.form-group').find('.text-danger').text('');
            $(""#SelectedDaysInWeekForMonth"").closest('.form-group').find('.text-danger').text('');
        }

        function changeDialogPosition() {
            $('.modal').dialog(""option"", ""position"", { my: ""center top"", at: ""center top+50"", of: window });
        }        
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DataLaundryApp.ViewModels.vmSchedulerSettings> Html { get; private set; }
    }
}
#pragma warning restore 1591
