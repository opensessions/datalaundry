#pragma checksum "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "82ab5d166616f886184263bf9759d02c6d31e4bf"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FeedProvider_FeedMappingResult), @"mvc.1.0.view", @"/Views/FeedProvider/FeedMappingResult.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/FeedProvider/FeedMappingResult.cshtml", typeof(AspNetCore.Views_FeedProvider_FeedMappingResult))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/_ViewImports.cshtml"
using DataLaundryApp;

#line default
#line hidden
#line 2 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/_ViewImports.cshtml"
using DataLaundryApp.Models;

#line default
#line hidden
#line 1 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
using DataLaundryDAL.DTO;

#line default
#line hidden
#line 2 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
using DataLaundryApp.ViewModels;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"82ab5d166616f886184263bf9759d02c6d31e4bf", @"/Views/FeedProvider/FeedMappingResult.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e53a07086c94b630cf9c3f8d7b30af59307c9434", @"/Views/_ViewImports.cshtml")]
    public class Views_FeedProvider_FeedMappingResult : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Tuple<FeedProvider, List<IntelligentFeedMapping>>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("fromData"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(62, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 5 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
  
    ViewBag.Title = "Feed Mapping Result";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(220, 766, true);
            WriteLiteral(@"<style>
    .ui-dialog {
        position: fixed;
    }
    .not-active {
        pointer-events: none;
        cursor: default;
        text-decoration: none;
        color: dimgrey;
    }
    .btn-position-fixed {
        right: 33px;
        position: fixed;
        bottom: 10px;
        z-index: 999;
        box-shadow: -1px 2px 30px 11px #5d5d5d;
    }
    .skipfiled {
        background-color: #1ab394;
        color: white;
        font-weight: bold;
    }
    .AlertNonMatch 
    {
        font-weight: bold;
        color: #ff0000;
    }
    .odd 
    {
        background-color: rgba(0, 0, 0, 0.05);
    }
</style>

<div class=""row wrapper border-bottom white-bg page-heading"">
    <div class=""col-lg-10"">
        <h2>");
            EndContext();
            BeginContext(987, 13, false);
#line 44 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
       Write(ViewBag.Title);

#line default
#line hidden
            EndContext();
            BeginContext(1000, 76, true);
            WriteLiteral("</h2>\r\n        <ol class=\"breadcrumb\">\r\n            <li>\r\n                <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 1076, "\"", 1118, 1);
#line 47 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
WriteAttributeValue("", 1083, Url.Action("Index","FeedProvider"), 1083, 35, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1119, 97, true);
            WriteLiteral(">Feed Providers</a>\r\n            </li>\r\n            <li class=\"active\">\r\n                <strong>");
            EndContext();
            BeginContext(1217, 13, false);
#line 50 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                   Write(ViewBag.Title);

#line default
#line hidden
            EndContext();
            BeginContext(1230, 67, true);
            WriteLiteral("</strong>\r\n            </li>\r\n        </ol>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
#line 56 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
 if (Model?.Item2?.Count > 0)
{

#line default
#line hidden
            BeginContext(1331, 134, true);
            WriteLiteral("    <div>\r\n        <button id=\"btnConfirm\" class=\"btn btn-lg btn-primary btn-position-fixed pull-right\">Confirm</button>\r\n    </div>\r\n");
            EndContext();
#line 61 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
}

#line default
#line hidden
            BeginContext(1468, 62, true);
            WriteLiteral("\r\n<div class=\"wrapper wrapper-content animated fadeInRight\">\r\n");
            EndContext();
#line 64 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
     if (ViewBag.ErrorMessage != null)
    {

#line default
#line hidden
            BeginContext(1577, 54, true);
            WriteLiteral("        <div class=\"alert alert-danger\">\r\n            ");
            EndContext();
            BeginContext(1632, 20, false);
#line 67 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
       Write(ViewBag.ErrorMessage);

#line default
#line hidden
            EndContext();
            BeginContext(1652, 18, true);
            WriteLiteral("\r\n        </div>\r\n");
            EndContext();
#line 69 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
    }
    else
    {
        if (Model?.Item2?.Count > 0)
        {

#line default
#line hidden
            BeginContext(1743, 140, true);
            WriteLiteral("            <div class=\"alert alert-success\">\r\n                Feed mapped/analyzed successfully, please review below:\r\n            </div>\r\n");
            EndContext();
            BeginContext(1898, 37, false);
#line 78 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
       Write(Html.Partial("_Details", Model.Item1));

#line default
#line hidden
            EndContext();
            BeginContext(1939, 1035, true);
            WriteLiteral(@"            <div class=""ibox"">
                <div class=""ibox-content"">
                    <div class=""clearfix"">
                        <a href='javascript:void(0);' class=""btn btn-primary pull-right"" onclick=""openViewSampleJson();"" style=""margin-left:10px;"">View Json Data</a>
                        <a href='javascript:void(0);' class=""btn btn-primary pull-right"" onclick=""openAddCustomFeedKey()"" style=""margin-left:10px;"">Add Custom Feed Key</a>
                        <a href='javascript:void(0);' class=""btn btn-primary pull-right collapseAll"" style=""margin-left:10px;"">
                            <i class=""fa fa-minus-circle""></i>&nbsp;Collapse All
                        </a>
                        <a href='javascript:void(0);' class=""btn btn-primary pull-right expandAll"" style=""margin-left:10px;"">
                            <i class=""fa fa-plus-circle""></i>&nbsp;Expand All
                        </a>
                        <a href='javascript:void(0);' class=""btn btn-primary pull-right");
            WriteLiteral(" reAnalyze\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 2974, "\"", 3021, 3);
            WriteAttributeValue("", 2984, "openReAnalyze(", 2984, 14, true);
#line 91 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
WriteAttributeValue("", 2998, Model.Item1.Id, 2998, 15, false);

#line default
#line hidden
            WriteAttributeValue("", 3013, ",false);", 3013, 8, true);
            EndWriteAttribute();
            BeginContext(3022, 178, true);
            WriteLiteral(">\r\n                            <i class=\"fa fa-refresh\"></i>&nbsp;Reanalyze\r\n                        </a>\r\n                    </div>\r\n                    \r\n                   \r\n");
            EndContext();
#line 97 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                     if (Model.Item2.Count > 0)
                    {
                        var lstChildrenFound = Model.Item2.Where(x => !string.IsNullOrEmpty(x.FeedMapping.FeedKey) && x.ParentId == null && x.FeedMapping.IsDeleted != true).OrderBy(x => x.FeedMapping.Position).ToList();
                        var lstChildrenNotFound = Model.Item2.Where(x => string.IsNullOrEmpty(x.FeedMapping.FeedKey) && x.ParentId == null && x.FeedMapping.IsDeleted != true).ToList();
                        var lstDeletedChildren = Model.Item2.Where(x => x.ParentId == null && x.FeedMapping.IsDeleted == true).ToList();


#line default
#line hidden
            BeginContext(3819, 198, true);
            WriteLiteral("                        <div class=\"matchedFields\">\r\n                            <h2>Matched Fields</h2>\r\n                            <div class=\"table-responsive\">\r\n                                ");
            EndContext();
            BeginContext(4018, 158, false);
#line 106 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                           Write(Html.Partial("_Helper.cshtml",new vmHelperModel(){hasMatchesFound=true,lstIntelligentFeedMappingAll=Model.Item2,lstIntelligentFeedMapping=lstChildrenFound } ));

#line default
#line hidden
            EndContext();
            BeginContext(4176, 364, true);
            WriteLiteral(@"
                            </div>
                        </div>
                        <div class=""nonMatchedFields"">
                            <div class=""NonMatchKey"">
                                <h2 class=""AlertNonMatch"">Non-Matched Fields</h2>
                                <div class=""table-responsive"">
                                    ");
            EndContext();
            BeginContext(4541, 162, false);
#line 113 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                               Write(Html.Partial("_Helper.cshtml",new vmHelperModel(){hasMatchesFound=false,lstIntelligentFeedMappingAll=Model.Item2,lstIntelligentFeedMapping=lstChildrenNotFound } ));

#line default
#line hidden
            EndContext();
            BeginContext(4703, 315, true);
            WriteLiteral(@"
                                </div>
                            </div>
                        </div>
                        <div class=""deletedMatchedFields"">
                            <h2>Deleted Fields</h2>
                            <div class=""table-responsive"">
                                ");
            EndContext();
            BeginContext(5019, 161, false);
#line 120 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                           Write(Html.Partial("_Helper.cshtml",new vmHelperModel(){hasMatchesFound=false,lstIntelligentFeedMappingAll=Model.Item2,lstIntelligentFeedMapping=lstDeletedChildren } ));

#line default
#line hidden
            EndContext();
            BeginContext(5180, 70, true);
            WriteLiteral("\r\n                            </div>\r\n                        </div>\r\n");
            EndContext();
#line 123 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                    }

#line default
#line hidden
            BeginContext(5273, 46, true);
            WriteLiteral("\r\n                </div>\r\n            </div>\r\n");
            EndContext();
#line 130 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                        
        }
        else
        {

#line default
#line hidden
            BeginContext(5537, 346, true);
            WriteLiteral(@"            <div class=""alert alert-danger col-md-12"">
                <div class=""col-md-8"" style=""margin-top: 10px;"">This feed has not been analyzed yet. Please click on mentioned button for analyzing.</div>
                <div class=""col-md-2 pull-right"">
                    <a href='javascript:void(0);' class=""btn btn-block btn-success""");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 5883, "\"", 5929, 3);
            WriteAttributeValue("", 5893, "openReAnalyze(", 5893, 14, true);
#line 137 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
WriteAttributeValue("", 5907, Model.Item1.Id, 5907, 15, false);

#line default
#line hidden
            WriteAttributeValue("", 5922, ",true);", 5922, 7, true);
            EndWriteAttribute();
            BeginContext(5930, 83, true);
            WriteLiteral(" style=\"margin-top: 4px;\">Analyze</a>\r\n                </div>\r\n            </div>\r\n");
            EndContext();
#line 140 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
        }
    }

#line default
#line hidden
            BeginContext(6031, 2253, true);
            WriteLiteral(@"    <div id=""EditFieldMappingDialog"" class=""modal"" style=""overflow: hidden;"">
        No data found
    </div>
    <div id=""ViewSampleJsonDialog"" class=""modal"">
        <pre style=""white-space: pre-wrap;max-height: 400px;"">No data found</pre>
    </div>
    <div id=""ViewSampleFeedKeyValueDialog"" class=""modal"">
        <div></div>
        <b>Feed Data</b>
        <pre style=""white-space: pre-wrap;max-height: 400px;"">No data found</pre>
    </div>
    <div id=""AddCustomFeedKeyMappingDialog"" class=""modal"" style=""overflow: hidden;"">
        No data found
    </div>
    <div id=""EditCustomFeedKeyMappingDialog"" class=""modal"" style=""overflow: hidden;"">
        No data found
    </div>
    <div id=""SessionTimeoutDialog"" class=""modal"" style=""overflow: hidden;"">
    </div>
</div>
<!-- Modal -->
<div class=""modal fade"" id=""ModelFiled"" tabindex=""-1"" role=""dialog"" aria-labelledby=""ModelFiledTitle"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog modal-dial");
            WriteLiteral(@"og-centered modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""ModelFiledLongTitle"">
                    <b>Skip optional field</b>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </h5>
            </div>
            <div class=""modal-body"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <table class=""table table-bordered table-condensed table-responsive"" id=""TableForSkip"">
                            <thead>
                                <tr>
                                    <th style=""width:10px;"" title=""Selected all"">
                                        #
                                    </th>
                                    <th>Name</th>
                             ");
            WriteLiteral("   </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        ");
            EndContext();
            BeginContext(8285, 70, false);
#line 189 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                   Write(Html.CheckBox("Model[0].IsSkip", false, new { @class = "chkbgcolor" }));

#line default
#line hidden
            EndContext();
            BeginContext(8355, 338, true);
            WriteLiteral(@"
                                    </td>
                                    <td>
                                        Address
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        ");
            EndContext();
            BeginContext(8694, 70, false);
#line 197 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                   Write(Html.CheckBox("Model[1].IsSkip", false, new { @class = "chkbgcolor" }));

#line default
#line hidden
            EndContext();
            BeginContext(8764, 336, true);
            WriteLiteral(@"
                                    </td>
                                    <td>
                                        Place
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        ");
            EndContext();
            BeginContext(9101, 70, false);
#line 205 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                   Write(Html.CheckBox("Model[2].IsSkip", false, new { @class = "chkbgcolor" }));

#line default
#line hidden
            EndContext();
            BeginContext(9171, 1025, true);
            WriteLiteral(@"
                                    </td>
                                    <td>
                                        Image
                                    </td>
                                </tr>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan=""2"">
                                        <span class=""jsSelectedFiled"" style=""font-weight:bold;""></span>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                <button type=""button"" class=""btn btn-primary"" onclick=""SkipField(this)"">Save & Continue</button>
            </div>
        </div>
    </div>
</div>");
            WriteLiteral("\n");
            EndContext();
            BeginContext(10196, 34, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "82ab5d166616f886184263bf9759d02c6d31e4bf21953", async() => {
                BeginContext(10216, 7, true);
                WriteLiteral("\r\n   \r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10230, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(10249, 12596, true);
                WriteLiteral(@"
    <script type=""text/javascript"">           
        var arrFeedMapping = [], arrFeedMappingFinal = [];
        var theForm = document.forms['fromData'];
        function addHidden(theForm, key, value) 
        {
            // Create a hidden input element, and append it to the form:
            var input = document.createElement('input');
            input.type = 'hidden';
            input.name = key;
            input.value = value;
            theForm.appendChild(input);
        }
        $(function () {
            checkUpDownRowVisibility();
            $("".feedKeyMapping td.details-control"").click(function () {
                $(this).parent().toggleClass(""shown"");
                if ($(this).parent().hasClass(""shown"")) {
                    $(this).parent().next("".childrow"").show();
                }
                else {
                    $(this).parent().next("".childrow"").hide();
                }
            });

            $("".expandAll"").click(function () {
     ");
                WriteLiteral(@"           $('.childrow').prev('tr').addClass('shown');
                $('.childrow').slideDown();
            });

            $("".collapseAll"").click(function () {
                $('.childrow').prev('tr').removeClass('shown');
                $('.childrow').slideUp();
            });

            $(document).on('click', '.up,.down', function () {
                try {
                    var row = $(this).parents(""tr:first"");
                    var oCuuretnTable = $(row).closest(""table"").attr('data-selector-class');                   
                    if ($(this).is("".up"")) {
                        var prevRow = (row.prev().hasClass('childrow') ? row.prev().prev() : row.prev());
                        var prevRowVal = prevRow.find(""#new_Position"").val();
                        var nextRowVal = row.find(""#new_Position"").val();

                        if (prevRowVal && nextRowVal) {
                            row.find(""#new_Position"").val(prevRowVal);
                           ");
                WriteLiteral(@" prevRow.find(""#new_Position"").val(nextRowVal);
                        }
                        row.fadeOut(""slow"", function () {
                            if (row.next().hasClass('childrow')) {
                                row.next().insertBefore(prevRow);
                                row.insertBefore(prevRow.prev()).fadeIn(""slow"");
                            }
                            else
                                row.insertBefore(prevRow).fadeIn(""slow"");
                            checkUpDownRowVisibility();
                        });
                    }
                    else if ($(this).is("".down"")) {
                        var curRow = (row.next().hasClass('childrow') ? row.next() : row);
                        var nextRow = (curRow.next().next().hasClass('childrow') ? curRow.next().next() : curRow.next());
                        var prevRowVal = nextRow.find(""#new_Position"").val();
                        var nextRowVal = row.find(""#new_Position"").val();
");
                WriteLiteral(@"
                        if (prevRowVal && nextRowVal) {
                            row.find(""#new_Position"").val(prevRowVal);
                            nextRow.find(""#new_Position"").val(nextRowVal);
                        }
                        row.fadeOut(""slow"", function () {
                            if (row.next().hasClass('childrow')) {
                                row.next().insertAfter(nextRow);
                                row.insertAfter(nextRow).fadeIn(""slow"");
                            }
                            else
                                row.insertAfter(nextRow).fadeIn(""slow"");
                            checkUpDownRowVisibility();
                        });
                    }
                    if (oCuuretnTable != undefined)
                    {         
                        setTimeout(function () {
                            var oOddEven = 0;
                            $("".jsTable[data-selector-class='"" + oCuuretnTable + ""'] > tbody >");
                WriteLiteral(@" tr"").each(function (index)
                            {
                                var otr = $(this);                               
                                if (!$(otr).hasClass(""childrow""))
                                {
                                    oOddEven++;
                                    if (oOddEven % 2 == 0) {
                                        $(otr).removeClass(""odd"");
                                        $(otr).addClass(""even"");
                                    }
                                    else {
                                        $(otr).addClass(""odd"");
                                        $(otr).removeClass(""even"");
                                    }                                       
                                }                                
                            });
                        },1000);
                    }                    
                } catch (e) {
                    console.log");
                WriteLiteral(@"(""Error : document : "" + e.message);
                }
            });

            $('#ViewSampleJsonDialog').dialog({
                autoOpen: false,
                width: 800,
                //height: 500,
                resizable: false,
                title: 'View Sample Json',
                modal: true,
                buttons: {
                    ""Close"": function () {
                        SetScrollPage(false);
                        $(this).dialog(""close"");
                    }
                },
                open: function (event, ui) {
                    SetScrollPage(true);
                    changeDialogPosition();
                }
            });

            $('#ViewSampleFeedKeyValueDialog').dialog({
                autoOpen: false,
                width: 800,
                //height: 500,
                resizable: false,
                title: 'View Feed Key Data',
                modal: true,
                buttons: {
                    """);
                WriteLiteral(@"Close"": function () {
                        $(this).dialog(""close"");
                    }
                },
                open: function (event, ui) {
                    changeDialogPosition();
                }
            });

            $('#EditFieldMappingDialog').dialog({
                autoOpen: false,
                width: 600,
                resizable: false,
                title: 'Edit Field Mapping',
                modal: true,
                buttons: {
                    'Save Without Selection': {
                        text: 'Save Without Selection',
                        id: ""SaveWithoutSelection"",
                        click: function () {
                            if ($('#frmEditFieldMapping').length > 0) {
                                if ($(""#FeedKeyBeforeChange"").val()) {
                                    swal({
                                        title: 'Do you want to effect on Intelligent Mapping as well?',
                           ");
                WriteLiteral(@"             type: 'warning',
                                        showCancelButton: true,
                                        confirmButtonColor: '#3085d6',
                                        cancelButtonColor: '#d33',
                                        confirmButtonText: 'Yes',
                                        cancelButtonText: 'No'
                                    }).then(() => {
                                        console.log(""Confirmed:Effect to Intelligent Mapping"");
                                        $('#EffectToInteMapping').val(true);
                                        editFieldMapping(false);
                                    }, () => {
                                        console.log(""Rejected:Effect to Intelligent Mapping"");
                                        $('#EffectToInteMapping').val(false);
                                        editFieldMapping(false);
                                    });
                                }");
                WriteLiteral(@"
                                else {
                                    $('#EffectToInteMapping').val(false);
                                    editFieldMapping(false);
                                }
                            }
                        }
                    },
                    'Save': {
                        text: 'Save',
                        id: ""Save"",
                        click: function () {
                            if ($('#frmEditFieldMapping').length > 0) {
                                if ($(""#frmEditFieldMapping"").valid()) {
                                    var selectedNodeCount = $(""#FeedKeyTree"").jstree(""get_selected"").length;
                                    if (selectedNodeCount == 0) {
                                        toastr.error(""Please select at least one feed key from the tree view"");
                                        return;
                                    }                                    
              ");
                WriteLiteral(@"                      swal({
                                        title: 'Do you want to effect on Intelligent Mapping as well?',
                                        type: 'warning',
                                        showCancelButton: true,
                                        confirmButtonColor: '#3085d6',
                                        cancelButtonColor: '#d33',
                                        confirmButtonText: 'Yes',
                                        cancelButtonText: 'No'
                                    }).then(() => {
                                        $('#EffectToInteMapping').val(true);
                                        editFieldMapping(true);
                                    }, () => {
                                        $('#EffectToInteMapping').val(false);
                                        editFieldMapping(true);
                                    });
                                }
                            }
");
                WriteLiteral(@"                        }
                    },
                    'Close': function () {
                        $(this).dialog(""close"");
                        SetScrollPage(false);
                    }
                },
                open: function (event, ui) {
                    SetScrollPage(true);
                    $('#frmEditFieldMapping').validate({
                        rules: {
                            FeedKeyPath: { required: true }
                        }
                    });
                }
            });

            $('#AddCustomFeedKeyMappingDialog').dialog({
                autoOpen: false,
                width: 600,
                //height: 500,
                resizable: false,
                title: 'Add Custom Feed Key',
                modal: true,               
                buttons: {
                    ""Save"": function () {
                        if ($('#frmCreateCustomFeedKeyMapping').length > 0) {
                            ");
                WriteLiteral(@"if ($(""#frmCreateCustomFeedKeyMapping"").valid()) {
                                var selectedNodeCount = $(""#frmCreateCustomFeedKeyMapping #LeafFeedKeyTree"").jstree(""get_selected"").length;

                                if (selectedNodeCount == 0) {
                                    toastr.error(""Please select at least one feed key from the tree view"");
                                    return;
                                }
                                createCustomFeedMapping();
                            }
                        }
                    },
                    ""Close"": function () 
                    {                       
                        SetScrollPage(false);
                        $(this).dialog(""close"");
                    }
                },
                open: function (event, ui) {
                    SetScrollPage(true);
                    changeDialogPosition();
                    if ($('#frmCreateCustomFeedKeyMapping').length > 0) {");
                WriteLiteral(@"
                        $('#frmCreateCustomFeedKeyMapping').validate({
                            rules: {
                                CustomKeyName: {
                                    required: true,
                                    remote: {
                                        url: '");
                EndContext();
                BeginContext(22846, 49, false);
#line 493 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                         Write(Url.Action("CheckFeedColumnName", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(22895, 2851, true);
                WriteLiteral(@"',
                                        type: ""post"",
                                        data: {
                                            FeedProviderId: function () {
                                                return $(""#Id"").val();
                                            },
                                            columnName: function () {
                                                return $(""#frmCreateCustomFeedKeyMapping #CustomKeyName"").val();
                                            }
                                        }
                                    }
                                }
                            },
                            messages: {
                                CustomKeyName: {
                                    required: ""This field is required."",
                                    remote: ""Custom Key Name already exists.""
                                }
                            }
                        });
 ");
                WriteLiteral(@"                   }
                },
                close: function (event, ui) {
                    //$(""#frmCreateCustomFeedKeyMapping"").remove();
                }
            });

            $('#EditCustomFeedKeyMappingDialog').dialog({
                autoOpen: false,
                width: 600,
                //height: 500,
                resizable: false,
                title: 'Edit Custom Feed Key',
                modal: true,
                buttons: {
                    ""Save"": function () {
                        if ($('#frmEditCustomFeedKeyMapping').length > 0) {
                            if ($(""#frmEditCustomFeedKeyMapping"").valid()) {
                                var selectedNodeCount = $(""#frmEditCustomFeedKeyMapping #LeafFeedKeyTree"").jstree(""get_selected"").length;

                                if (selectedNodeCount == 0) {
                                    toastr.error(""Please select at least one feed key from the tree view"");
                      ");
                WriteLiteral(@"              return;
                                }
                                editCustomFeedMapping();
                            }
                        }
                    },
                    ""Close"": function () {
                        $(this).dialog(""close"");
                    }
                },
                open: function (event, ui) {
                    changeDialogPosition();
                    if ($('#frmEditCustomFeedKeyMapping').length > 0) {
                        $('#frmEditCustomFeedKeyMapping').validate({
                            rules: {
                                CustomKeyName: {
                                    required: true,
                                    remote: {
                                        url: '");
                EndContext();
                BeginContext(25747, 49, false);
#line 553 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                         Write(Url.Action("CheckFeedColumnName", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(25796, 5489, true);
                WriteLiteral(@"',
                                        type: ""post"",
                                        data: {
                                            id: function () {
                                                return $(""#frmEditCustomFeedKeyMapping #Id"").val();
                                            },
                                            FeedProviderId: function () {
                                                return $(""#Id"").val();
                                            },
                                            columnName: function () {
                                                return $(""#frmEditCustomFeedKeyMapping #CustomKeyName"").val();
                                            },
                                        }
                                    }
                                }
                            },
                            messages: {
                                CustomKeyName: {
                                    re");
                WriteLiteral(@"quired: ""This field is required."",
                                    remote: ""Custom Key Name already exists.""
                                }
                            }
                        });
                    }
                },
                close: function (event, ui) {
                    //$(""#frmEditCustomFeedKeyMapping"").remove();
                }
            });

            $('#SessionTimeoutDialog').dialog({
                autoOpen: false,
                width: 410,
                left: 465,
                resizable: false,
                title: 'Login',
                modal: true,
                open: function (event, ui) {
                    changeDialogPosition();
                    $('#frmLoginPopup').validate({
                        rules: {
                            Email: {
                                required: true
                            },
                            Password: {
                                required: tru");
                WriteLiteral(@"e
                            }
                        },
                        messages: {
                            Email: {
                                required: ""This field is required.""
                            },
                            Password: {
                                required: ""This field is required.""
                            }
                        }
                    });
                }
            });

            $.validator.addMethod(""checkTags"", function (value) {
                //add custom method
                //Tags input plugin converts input into div having id #YOURINPUTID_tagsinput
                //now you can count no of tags
                return ($(""#PossibleMatches"").prev("".bootstrap-tagsinput"").find('.tag').length > 0);
            });

            $(""#btnConfirm"").click(function () {   
                //debugger;    
                arrFeedMapping = [], arrFeedMappingFinal = [];

                //confirm feed analy");
                WriteLiteral(@"sis
                var feedProviderId = $(""#Id"").val();

                //get feed mapping done in the matched section
                GetMappingByTableId($('#tblMatchesFound'));

                //get feed mapping done in the not matched ection
                GetMappingByTableId($('#tblMatchesNotFound'));

                if (arrFeedMapping.length == 0) {
                    toastr.error(""Please map at least one feed key with column name"");
                    return;
                }
                var model={
                    lstFeedMapping:JSON.stringify(arrFeedMappingFinal),
                    feedProviderId:feedProviderId,
                    IsFeedMappingChanged:arrFeedMappingFinal.length > 0
                };
                /*Genrate dynamic from*/
                addHidden(theForm,""feedProviderId"",feedProviderId);
                addHidden(theForm,""IsFeedMappingChanged"",(arrFeedMappingFinal.length > 0));
                for(var i=0;i<arrFeedMappingFinal.length;i++)
  ");
                WriteLiteral(@"              {
                    addHidden(theForm,""lstFeedMapping[""+i+""].FeedProviderId"",arrFeedMappingFinal[i].FeedProviderId);
                    addHidden(theForm,""lstFeedMapping[""+i+""].ParentId"",arrFeedMappingFinal[i].ParentId);
                    addHidden(theForm,""lstFeedMapping[""+i+""].FeedMappingParentId"",arrFeedMappingFinal[i].FeedMappingParentId);
                    addHidden(theForm,""lstFeedMapping[""+i+""].IsCustomFeedKey"",arrFeedMappingFinal[i].IsCustomFeedKey);
                    addHidden(theForm,""lstFeedMapping[""+i+""].TableName"",arrFeedMappingFinal[i].TableName);
                    addHidden(theForm,""lstFeedMapping[""+i+""].ColumnName"",arrFeedMappingFinal[i].ColumnName);
                    addHidden(theForm,""lstFeedMapping[""+i+""].FeedKeyPath"",arrFeedMappingFinal[i].FeedKeyPath);
                    addHidden(theForm,""lstFeedMapping[""+i+""].ActualFeedKeyPath"",arrFeedMappingFinal[i].ActualFeedKeyPath);
                    addHidden(theForm,""lstFeedMapping[""+i+""].ColumnDataType"",arrF");
                WriteLiteral(@"eedMappingFinal[i].ColumnDataType);
                    addHidden(theForm,""lstFeedMapping[""+i+""].Position"",arrFeedMappingFinal[i].Position);
                    addHidden(theForm,""lstFeedMapping[""+i+""].EffectToInteMapping"",arrFeedMappingFinal[i].EffectToInteMapping);
                }
                /*End*/

                $.ajax({
                    url: '");
                EndContext();
                BeginContext(31286, 48, false);
#line 662 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                     Write(Url.Action("ConfirmFeedAnalysis","FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(31334, 769, true);
                WriteLiteral(@"',
                    data:$(""#fromData"").serialize(),
                    dataType: 'json',                   
                    type: 'POST',
                    success: function (data, textStatus, jQxhr) 
                    {
                        if (data.status == true) {                                           
                            window.location.reload();
                        }
                        else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        if (jqXhr.status == 401) {                           
                            $(""#SessionTimeoutDialog"").load('");
                EndContext();
                BeginContext(32105, 44, false);
#line 677 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                         Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(32150, 4364, true);
                WriteLiteral(@"/', function (response, status, xhr) {
                                $(""#SessionTimeoutDialog"").dialog(""open"");
                            });
                        }
                        else
                            toastr.error(""Something went wrong. Please try again soon."");
                    }
                });
            });

            $(document).on('click', '.editFieldMapping:enabled', function () {
                openEditFieldMapping(this);
            });
        });        
        
         $('#AddCustomFeedKeyMappingDialog, #ViewSampleJsonDialog, #EditFieldMappingDialog').on('dialogclose', function(event) {
             SetScrollPage(false);
        });

        function SetScrollPage(IsSet)
        {
            if(IsSet)
                $(""body"").css(""overflow"", ""hidden"");
            else
                $(""body"").css(""overflow"", ""auto"");
        }

        function changeDialogPosition() {
            try {
                $('.modal').dialog(""op");
                WriteLiteral(@"tion"", ""position"", { my: ""center top"", at: ""center top+50"", of: window });
            } catch (e) {
                console.log(""Error : changeDialogPosition : "" + e.message);
            }
        }

        function GetMappingByTableId(table) {
            $(table).find(""tbody tr:not(.childrow)"").each(function (i, obj) {
                GetMappingByTableIdInner(i, obj);
            });
        }

        function GetMappingByTableIdInner(i, obj) {
            var feedProviderId = $(""#Id"").val();
            var prevFeedKeyPath = $(obj).data(""feedKeyPath"");

            var tableName = $($(obj).find('.tableName')[0]).text(),
            columnName = $($(obj).find('.actualColumnName')[0]).val(),
            feedKeyPath = $($(obj).find('.feedKeyPath > span')[0]).text();

            if (tableName != undefined && tableName != '') {
                var parentId = $($(obj).find('.parentId')[0]).val();
                var feedMappingParentId = $($(obj).find('.feedMappingParentId')[0]).val();");
                WriteLiteral(@"
                var isCustomFeedKey = $($(obj).find('.isCustomFeedKey')[0]).val();
                var actualFeedKeyPath = $($(obj).find('.actualFeedKeyPath')[0]).val();
                var ColumnDataType = $($(obj).find('.ColumnDataType')[0]).val();
                var oldPosition = $($(obj).find('#old_Position')[0]).val();
                var newPosition = $($(obj).find('#new_Position')[0]).val();
                var EffectToInteMapping = $($(obj).find('.EffectToInteMapping')[0]).val();

                var feedMappingObj = {
                    FeedProviderId: feedProviderId,
                    ParentId: parentId,
                    FeedMappingParentId: feedMappingParentId,
                    IsCustomFeedKey: isCustomFeedKey,
                    TableName: tableName,
                    ColumnName: columnName,
                    FeedKeyPath: feedKeyPath,
                    ActualFeedKeyPath: actualFeedKeyPath,
                    ColumnDataType: ColumnDataType,
                    P");
                WriteLiteral(@"osition: newPosition,
                    //EffectToInteMapping: (!feedKeyPath ? EffectToInteMapping : true)
                    EffectToInteMapping: EffectToInteMapping
                };

                if (prevFeedKeyPath != feedKeyPath || oldPosition != newPosition)
                    arrFeedMappingFinal.push(feedMappingObj);

                arrFeedMapping.push(feedMappingObj);
            }

            if ($(obj).hasClass('childrow')) {
                var matchedFields = $('.childrow').children('.matchedFields');

                var tableCount = $(matchedFields).find('table').length;

                if (tableCount > 0) {
                    GetMappingByTableId($(matchedFields).find('table')[0]);
                }

                var nonMatchedFields = $('.childrow').children('.nonMatchedFields');

                var tableCount = $(nonMatchedFields).find('table').length;

                if (tableCount > 0) {
                    GetMappingByTableId($(nonMatchedFields).fin");
                WriteLiteral(@"d('table')[0]);
                }
            }
        }

        function openViewSampleJson() {
            var feedProviderId = $(""#Id"").val(),
                jsonFileName = $(""#SampleJSONFIleName"").val();
            $(""#ViewSampleJsonDialog pre"").load('");
                EndContext();
                BeginContext(36516, 42, false);
#line 779 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                             Write(Url.Action("ViewItemJson", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(36559, 222, true);
                WriteLiteral("/\' + feedProviderId + \"?jsonFileName=\" + jsonFileName, function (response, status, xhr) {\r\n                if (xhr.status == 401) {\r\n                    window.stop();\r\n                    $(\"#SessionTimeoutDialog\").load(\'");
                EndContext();
                BeginContext(36783, 44, false);
#line 782 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                 Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(36828, 1305, true);
                WriteLiteral(@"/', function (response, status, xhr) {
                        $(""#SessionTimeoutDialog"").dialog(""open"");
                    });
                }
                else
                    $(""#ViewSampleJsonDialog"").dialog(""open"");
            });
        }

        function openEditFieldMapping(row) {
            if (row != null || row != undefined) {
                var feedProviderId = $(""#Id"").val(),
                    jsonFileName = $(""#JSONTreeFileName"").val();
                var tableName = $($(row).parent().parent().find('.tableName')[0]).text(),
                    actualColumnName = $($(row).parent().parent().find('.actualColumnName')[0]).val(),
                    feedKeyPath = $($(row).parent().parent().find('.feedKeyPath > span')[0]).text(),
                    ColumnDataType = $($(row).parent().parent().find('.ColumnDataType')[0]).val(),
                    feedKeyBeforeChange = $($(row).parent().parent().find('.feedKeyBeforeChange')[0]).val(),
                    parentFeedK");
                WriteLiteral(@"eyPath = '';

                var childRow = $(row).closest('tr.childrow');

                if (childRow.length == 1) {
                    parentFeedKeyPath = $(childRow.prev('tr').find('.feedKeyPath > span')[0]).text();
                }

                var baseUrl = '");
                EndContext();
                BeginContext(38134, 46, false);
#line 808 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                          Write(Url.Action("EditFieldMapping", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(38180, 609, true);
                WriteLiteral(@"';
                var finalUrl = baseUrl + '/' + feedProviderId + ""?tableName="" + tableName + ""&columnName="" + actualColumnName + ""&feedKeyPath="" + encodeURIComponent(feedKeyPath) + ""&parentFeedKeyPath="" + encodeURIComponent(parentFeedKeyPath) + ""&jsonFileName="" + encodeURIComponent(jsonFileName);

                //$(""#EditFieldMappingDialog"").dialog(""open"");

                $(""#EditFieldMappingDialog"").load(finalUrl, function (response, status, xhr) {
                    if (xhr.status == 401) {
                        window.stop();
                        $(""#SessionTimeoutDialog"").load('");
                EndContext();
                BeginContext(38791, 44, false);
#line 816 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                     Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(38836, 2087, true);
                WriteLiteral(@"/', function (response, status, xhr) {
                            $(""#SessionTimeoutDialog"").dialog(""open"");
                        });
                    }
                    else {
                        if (!feedKeyPath)
                            $(""#SaveWithoutSelection"").hide();
                        else
                            $(""#SaveWithoutSelection"").show();
                        $(""#FeedKeyBeforeChange"").val(feedKeyBeforeChange);
                        $(""#EditFieldMappingDialog"").dialog(""open"");
                    }
                });
            }
        }

        function openViewSampleFeedKeyValue(row) {
            debugger;
            if (row != null || row != undefined) {
                var html = '';
                var feedProviderId = $(""#Id"").val(),
                    jsonFileName = $(""#SampleJSONFIleName"").val();

                var tableName = $($(row).parent().parent().find('.tableName')[0]).text();
                var columnName = $($(r");
                WriteLiteral(@"ow).parent().parent().find('.columnName span')[0]).text();
                var feedKeyPath = $($(row).parent().parent().find('.feedKeyPath > span')[0]).text();
                var actualFeedKeyPath = $($(row).parent().parent().find('.actualFeedKeyPath')[0]).val();

                html += '<table class=""table table-bordered table-striped"">';
                html += '   <tr>'
                html += '       <th>Table Name</th>'
                html += '       <td>' + tableName + '</td>'
                html += '   </tr>'
                html += '   <tr>'
                html += '       <th>Column Name</th>'
                html += '       <td>' + columnName + '</td>'
                html += '   </tr>'
                html += '   <tr>'
                html += '       <th>Feed Key</th>'
                html += '       <td>' + feedKeyPath + '</td>'
                html += '   </tr>'
                html += '</table>';

                $(""#ViewSampleFeedKeyValueDialog"").children('div').html(html");
                WriteLiteral(");\r\n\r\n                //var baseUrl = \'");
                EndContext();
                BeginContext(40924, 45, false);
#line 861 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                            Write(Url.Action("ViewFeedKeyJson", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(40969, 35, true);
                WriteLiteral("\';\r\n                var baseUrl = \'");
                EndContext();
                BeginContext(41005, 48, false);
#line 862 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                          Write(Url.Action("ViewFeedKeyJson_v1", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(41053, 443, true);
                WriteLiteral(@"';
                var finalUrl = baseUrl + '?id=' + feedProviderId + ""&jsonPath="" + encodeURIComponent(actualFeedKeyPath) + ""&jsonFileName="" + encodeURIComponent(jsonFileName);

                $(""#ViewSampleFeedKeyValueDialog"").children('pre').load(finalUrl, function (response, status, xhr) {
                    if (xhr.status == 401) {
                        window.stop();
                        $(""#SessionTimeoutDialog"").load('");
                EndContext();
                BeginContext(41498, 44, false);
#line 868 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                     Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(41543, 540, true);
                WriteLiteral(@"/', function (response, status, xhr) {
                            $(""#SessionTimeoutDialog"").dialog(""open"");
                        });
                    }
                    else
                        $(""#ViewSampleFeedKeyValueDialog"").dialog(""open"");
                });
            }
        }

        function openAddCustomFeedKey() {
            var feedProviderId = $(""#Id"").val(),
                jsonFileName = $(""#JsonTreeWithDisabledKeysFileName"").val();
            $(""#AddCustomFeedKeyMappingDialog"").load('");
                EndContext();
                BeginContext(42085, 56, false);
#line 881 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                  Write(Url.Action("CreateCustomFeedKeyMapping", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(42142, 222, true);
                WriteLiteral("/\' + feedProviderId + \"?jsonFileName=\" + jsonFileName, function (response, status, xhr) {\r\n                if (xhr.status == 401) {\r\n                    window.stop();\r\n                    $(\"#SessionTimeoutDialog\").load(\'");
                EndContext();
                BeginContext(42366, 44, false);
#line 884 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                 Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(42411, 506, true);
                WriteLiteral(@"/', function (response, status, xhr) {
                        $(""#SessionTimeoutDialog"").dialog(""open"");
                    });
                }
                else
                    $(""#AddCustomFeedKeyMappingDialog"").dialog(""open"");
            });
        }

        function openEditCustomFeedKey(id) {
            var feedProviderId = $(""#Id"").val(),
                jsonFileName = $(""#JsonTreeWithDisabledKeysFileName"").val();
            $(""#EditCustomFeedKeyMappingDialog"").load('");
                EndContext();
                BeginContext(42919, 54, false);
#line 896 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                   Write(Url.Action("EditCustomFeedKeyMapping", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(42974, 251, true);
                WriteLiteral("?id=\' + id + \'&feedProviderId=\' + feedProviderId + \"&jsonFileName=\" + jsonFileName, function (response, status, xhr) {\r\n                if (xhr.status == 401) {\r\n                    window.stop();\r\n                    $(\"#SessionTimeoutDialog\").load(\'");
                EndContext();
                BeginContext(43227, 44, false);
#line 899 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                 Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(43272, 12300, true);
                WriteLiteral(@"/', function (response, status, xhr) {
                        $(""#SessionTimeoutDialog"").dialog(""open"");
                    });
                }
                else
                    $(""#EditCustomFeedKeyMappingDialog"").dialog(""open"");
            });
        }

        function editFieldMapping(isSelection) {
            var tableName = $(""#TableName"").val();
            var columnName = $(""#ColumnName"").val();
            var actualColumnName = $(""#ActualColumnName"").val();
            var feedKeyNodeValue = $(""#FeedKeyPath"").val();
            //var effectToInteMapping = $('#EffectToInteMapping').is("":checked"") ? true : false;
            var effectToInteMapping = $('#EffectToInteMapping').val();
            var feedKeyPath = '';
            var actualFeedKeyPath = '';
            var columnDataType = '';

            if (isSelection == true) {
                var feedKeyPathNodeParts = feedKeyNodeValue.split('||');
                feedKeyPath = feedKeyPathNodeParts[0];
       ");
                WriteLiteral(@"         actualFeedKeyPath = feedKeyPathNodeParts[1];
                columnDataType = feedKeyPathNodeParts[2]
            }
            var tblMatchesFoundRow = $(""#tblMatchesFound tbody tr[data-table-name='"" + tableName + ""'][data-column-name='"" + actualColumnName + ""']"");
            var tblMatchesNotFoundRow = $(""#tblMatchesNotFound tbody tr[data-table-name='"" + tableName + ""'][data-column-name='"" + actualColumnName + ""']"");

            if (tblMatchesFoundRow.length == 1) {
                moveRowToTargetTable(tblMatchesFoundRow, isSelection, feedKeyPath, actualFeedKeyPath, columnDataType, effectToInteMapping);
            }
            else if (tblMatchesNotFoundRow.length == 1) {
                moveRowToTargetTable(tblMatchesNotFoundRow, isSelection, feedKeyPath, actualFeedKeyPath, columnDataType, effectToInteMapping);
            }

            $(""#EditFieldMappingDialog"").dialog(""close"");
        }

        function moveRowToTargetTable(element, isSelection, feedKeyPath, actualFeedKe");
                WriteLiteral(@"yPath, columnDataType, effectToInteMapping) {
            if (element.length == 1) {
                var feedKeyPathElement = element.find('.feedKeyPath > span');
                var actualFeedKeyPathElement = element.find('.actualFeedKeyPath');
                var ColumnDataTypeElement = element.find('.ColumnDataType');
                var EffectToInteMapping = element.find('.EffectToInteMapping');
                $(feedKeyPathElement[0]).text(feedKeyPath);
                $(actualFeedKeyPathElement[0]).val(actualFeedKeyPath);
                $(ColumnDataTypeElement[0]).val(columnDataType);
                $(EffectToInteMapping[0]).val(effectToInteMapping);

                var childRow = $(element).next('.childrow');

                var matchedFields;
                var nonMatchedFields;
                var targetTbody;
                var sourceTbody;

                if (isSelection == true) {
                    nonMatchedFields = $(element).closest('.nonMatchedFields');

         ");
                WriteLiteral(@"           //check if need to move to target element
                    if (nonMatchedFields.length == 0)
                        return;

                    //get first closest one
                    nonMatchedFields = nonMatchedFields[0];
                    matchedFields = $(nonMatchedFields).prev('.matchedFields');
                }
                else {
                    matchedFields = $(element).closest('.matchedFields');

                    //check if need to move to target element
                    if (matchedFields.length == 0)
                        return;

                    //get first closest one
                    matchedFields = matchedFields[0];
                    nonMatchedFields = $(matchedFields).next('.nonMatchedFields');
                }

                if (isSelection == true) {
                    //recursively move all childs from non-matched to matched section
                    sourceTbody = $(nonMatchedFields).children().children().children('t");
                WriteLiteral(@"able > tbody');
                    targetTbody = $(matchedFields).children().children().children('table > tbody');

                    if (targetTbody.length > 0) {
                        //get the first immediate tbody
                        targetTbody = targetTbody[0];

                        $(targetTbody).children('tr.trNotFound').hide();

                        //this will move row from source and append it to target element
                        element.find(""td:last"").attr('colspan', 2);
                        //element.append('<td style=""vertical-align: middle;""><a href=""javascript:void(0);"" class=""up""><i class=""fa fa-arrow-circle-o-up"" style=""font-size: 30px;margin-bottom:5px;""></i></a><a href=""javascript:void(0);"" class=""down""><i class=""fa fa-arrow-circle-o-down"" style=""font-size: 30px;""></i></a></td>');
                        //$(targetTbody).find(""tr.trNotFound"").before(element);

                        $(targetTbody).append(element);

                        if (childR");
                WriteLiteral(@"ow.length == 1) {
                            $(targetTbody).append(childRow);

                            //enable buttons of child feed key mappings
                            var childMatchedFieldsTable = $(childRow).children().children('.matchedFields').children().children('table');
                            var childNonMatchedFieldsTable = $(childRow).children().children('.nonMatchedFields').children().children('table')

                            if (childMatchedFieldsTable.length > 0) {
                                childMatchedFieldsTable = childMatchedFieldsTable[0];

                                var childMatchedRows = $(childMatchedFieldsTable).children('tbody').children('tr');

                                if (childMatchedRows.length > 0) {
                                    for (var i = 0; i < childMatchedRows.length; i++) {
                                        var changeBtn = $(childMatchedRows[i]).children().children('.editFieldMapping');
                         ");
                WriteLiteral(@"               if (changeBtn.length != 0) {
                                            $(changeBtn).removeAttr('disabled');
                                        }
                                    }
                                }
                            }

                            if (childNonMatchedFieldsTable.length > 0) {
                                childNonMatchedFieldsTable = childNonMatchedFieldsTable[0];

                                var childNonMatchedRows = $(childNonMatchedFieldsTable).children('tbody').children('tr');

                                if (childNonMatchedRows.length > 0) {
                                    for (var i = 0; i < childNonMatchedRows.length; i++) {
                                        var changeBtn = $(childNonMatchedRows[i]).children().children('.editFieldMapping');
                                        if (changeBtn.length != 0) {
                                            $(changeBtn).removeAttr('disabled');
             ");
                WriteLiteral(@"                           }
                                    }
                                }
                            }
                        }

                        if (sourceTbody.length > 0) {
                            //get the first immediate tbody
                            sourceTbody = sourceTbody[0];
                            var trCount = $(sourceTbody).children('tr').length;

                            //check if all rows moved except not found one
                            if (trCount == 1)
                                $(sourceTbody).children('tr.trNotFound').show();
                        }
                    }
                }
                else {
                    //recursively move all childs from matched to non-matched section
                    sourceTbody = $(matchedFields).children().children().children('table > tbody');
                    targetTbody = $(nonMatchedFields).children().children().children('table > tbody');

          ");
                WriteLiteral(@"          if (targetTbody.length > 0) {
                        //get the first immediate tbody
                        targetTbody = targetTbody[0];

                        $(targetTbody).children('tr.trNotFound').hide();

                        //this will move row from source and append it to target element
                        //element.find(""td:last"").remove();
                        element.find(""td:last a.up"").parent().remove();
                        element.find(""td:last a.down"").parent().remove();
                        element.find("".btn"").not('.editFieldMapping').remove();

                        $(targetTbody).append(element);

                        if (childRow.length == 1) {
                            $(targetTbody).append(childRow);

                            var childMatchedFieldsTable = $(childRow).children().children('.matchedFields').children().children('table');
                            var childNonMatchedFieldsTable = $(childRow).children().children('.n");
                WriteLiteral(@"onMatchedFields').children().children('table')

                            //this will move all rows from matched table to non-matched table
                            if (childMatchedFieldsTable.length > 0) {
                                childMatchedFieldsTable = childMatchedFieldsTable[0];

                                var childMatchedRows = $(childMatchedFieldsTable).children('tbody').children('tr:not(.trNotFound)');

                                if (childMatchedRows.length > 0) {
                                    for (var i = 0; i < childMatchedRows.length; i++) {
                                        moveRowToTargetTable($(childMatchedRows[i]), isSelection, feedKeyPath, actualFeedKeyPath, columnDataType);                                       
                                    }
                                }
                            }

                            //disable buttons of child feed key mappings
                            if (childNonMatchedFieldsTable");
                WriteLiteral(@".length > 0) {
                                childNonMatchedFieldsTable = childNonMatchedFieldsTable[0];

                                var childNonMatchedRows = $(childNonMatchedFieldsTable).children('tbody').children('tr');

                                if (childNonMatchedRows.length > 0) {
                                    for (var i = 0; i < childNonMatchedRows.length; i++) {
                                        var changeBtn = $(childNonMatchedRows[i]).children().children('.editFieldMapping');
                                        if (changeBtn.length != 0) {
                                            $(changeBtn).attr('disabled', 'disabled');
                                        }
                                    }
                                }
                            }
                        }

                        if (sourceTbody.length > 0) {
                            //get the first immediate tbody
                            sourceTbody = sourceT");
                WriteLiteral(@"body[0];
                            var trCount = $(sourceTbody).children('tr').length;
                            //check if all rows moved except not found one
                            if (trCount == 1)
                                $(sourceTbody).children('tr.trNotFound').show();
                        }
                        checkUpDownRowVisibility();
                    }
                }
                //checkUpDownRowVisibility();
            }
        }

        function createCustomFeedMapping() {
            var feedProviderId = $(""#Id"").val();
            var customKeyName = $(""#frmCreateCustomFeedKeyMapping #CustomKeyName"").val();
            var feedKeyPath = $(""#frmCreateCustomFeedKeyMapping #FeedKeyPath"").val();

            var input = {
                FeedProviderId: feedProviderId,
                CustomKeyName: customKeyName,
                FeedKeyPath: feedKeyPath
            };

            //ajax call to save data
            $.ajax({
            ");
                WriteLiteral("    //url: \'");
                EndContext();
                BeginContext(55573, 56, false);
#line 1129 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                   Write(Url.Action("CreateCustomFeedKeyMapping", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(55629, 26, true);
                WriteLiteral("\',\r\n                url: \'");
                EndContext();
                BeginContext(55656, 59, false);
#line 1130 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                 Write(Url.Action("CreateCustomFeedKeyMapping_v1", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(55715, 622, true);
                WriteLiteral(@"',
                data: input,
                type: 'POST',
                success: function (data, textStatus, jQxhr) {
                    if (data.status == true) {
                        $(""#AddCustomFeedKeyMappingDialog"").dialog(""close"");
                        location.reload(true);
                    }
                    else {
                        toastr.error(data.message);
                    }
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    if (jqXhr.status == 401) {
                        $(""#SessionTimeoutDialog"").load('");
                EndContext();
                BeginContext(56339, 44, false);
#line 1144 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                     Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(56384, 955, true);
                WriteLiteral(@"/', function (response, status, xhr) {
                            $(""#SessionTimeoutDialog"").dialog(""open"");
                        });
                    }
                    else
                        toastr.error(""Something went wrong. Please try again soon."");
                }
            });
        }

        function editCustomFeedMapping() {
            var id = $(""#frmEditCustomFeedKeyMapping #Id"").val();
            var feedProviderId = $(""#Id"").val();
            var customKeyName = $(""#frmEditCustomFeedKeyMapping #CustomKeyName"").val();
            var feedKeyPath = $(""#frmEditCustomFeedKeyMapping #FeedKeyPath"").val();

            var input = {
                Id: id,
                FeedProviderId: feedProviderId,
                CustomKeyName: customKeyName,
                FeedKeyPath: feedKeyPath
            };

            //ajax call to save data
            $.ajax({
                //url: '");
                EndContext();
                BeginContext(57340, 54, false);
#line 1169 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                   Write(Url.Action("EditCustomFeedKeyMapping", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(57394, 26, true);
                WriteLiteral("\',\r\n                url: \'");
                EndContext();
                BeginContext(57421, 57, false);
#line 1170 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                 Write(Url.Action("EditCustomFeedKeyMapping_v1", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(57478, 623, true);
                WriteLiteral(@"',
                data: input,
                type: 'POST',
                success: function (data, textStatus, jQxhr) {
                    if (data.status == true) {
                        $(""#EditCustomFeedKeyMappingDialog"").dialog(""close"");
                        location.reload(true);
                    }
                    else {
                        toastr.error(data.message);
                    }
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    if (jqXhr.status == 401) {
                        $(""#SessionTimeoutDialog"").load('");
                EndContext();
                BeginContext(58103, 44, false);
#line 1184 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                     Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(58148, 1544, true);
                WriteLiteral(@"/', function (response, status, xhr) {
                            $(""#SessionTimeoutDialog"").dialog(""open"");
                        });
                    }
                    else
                        toastr.error(""Something went wrong. Please try again soon."");
                }
            });
        }

        function openDeleteCustomFeedKey(id) {
            swal({
                title: 'Are you sure to delete this custom feed key?',
                text: ""You will not be able to recover!"",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then(function () {
                swal({
                    title: 'Do you want to effect on Intelligent Mapping as well?',
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
           ");
                WriteLiteral(@"         cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No'
                }).then(() => {
                    deleteCustomFeedKey(id, true);
                }, () => {
                    deleteCustomFeedKey(id, false);
                });
                //deleteCustomFeedKey(id);
            },
            function () {
            });
        }

        function deleteCustomFeedKey(id, effectToIntemapping) {
            var url = '");
                EndContext();
                BeginContext(59693, 56, false);
#line 1224 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                  Write(Url.Action("DeleteCustomFeedKeyMapping", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(59749, 625, true);
                WriteLiteral(@"';
            $.ajax({
                url: url,
                type: ""POST"",
                data: { ""id"": id, ""effectToIntemapping"": effectToIntemapping },
                success: function (data) {
                    if (data.status == true) {
                        location.reload(true);
                    }
                    else {
                        toastr.error(data.message);
                    }
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    if (jqXhr.status == 401) {
                        $(""#SessionTimeoutDialog"").load('");
                EndContext();
                BeginContext(60376, 44, false);
#line 1239 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                     Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(60421, 989, true);
                WriteLiteral(@"/', function (response, status, xhr) {
                            $(""#SessionTimeoutDialog"").dialog(""open"");
                        });
                    }
                    else
                        toastr.error(""Something went wrong. Please try again soon."");
                }
            });
        }

        function activateDeactivateFeed(id, isActive) {
            swal({
                //title: 'Are you sure to ' + (!isActive ? 'activate' : 'delete') + ' this feed key?',
                title: (!isActive ? 'Are you sure to revert this feed key back?' : 'Are you sure to delete this feed key?'),
                //text: ""You will not be able to recover"",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then(function () {
                $.ajax({
                    url: '");
                EndContext();
                BeginContext(61411, 55, false);
#line 1261 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                     Write(Url.Action("ActivateDeactivateFeedKey", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(61466, 606, true);
                WriteLiteral(@"',
                    type: ""POST"",
                    data: { ""id"": id, ""isActive"": isActive },
                    success: function (data) {
                        if (data.status == true) {
                            location.reload(true);
                        }
                        else {
                            toastr.error(data.message);
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        if (jqXhr.status == 401) {
                            $(""#SessionTimeoutDialog"").load('");
                EndContext();
                BeginContext(62074, 44, false);
#line 1274 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                         Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(62119, 539, true);
                WriteLiteral(@"/', function (response, status, xhr) {
                                $(""#SessionTimeoutDialog"").dialog(""open"");
                            });
                        }
                        else
                            toastr.error(""Something went wrong. Please try again soon."");
                    }                   
                });
            });
        }
        
        function openReAnalyze(id, isForFirstTime) {
            if (isForFirstTime) {
                $.ajax({
                    url: '");
                EndContext();
                BeginContext(62660, 44, false);
#line 1288 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                      Write(Url.Action("AnalyzeFeed_v1", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(62705, 315, true);
                WriteLiteral(@"/' + id,
                    success: function (data) {
                        location.reload(true);
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        if (jqXhr.status == 401) {
                            $(""#SessionTimeoutDialog"").load('");
                EndContext();
                BeginContext(63022, 44, false);
#line 1294 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                         Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(63067, 878, true);
                WriteLiteral(@"/',
                                function (response, status, xhr) {
                                    $(""#SessionTimeoutDialog"").dialog(""open"");
                                }
                            );
                        }                        
                    }                  
                });
            }
            else {
                swal({
                    title: 'Are you sure to reanalyze this feed as you may lose the changes?',
                    text: ""You will not be able to recover"",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes'
                }).then(function () {
                    $.ajax({
                        url: '");
                EndContext();
                BeginContext(63947, 44, false);
#line 1314 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                          Write(Url.Action("AnalyzeFeed_v1", "FeedProvider"));

#line default
#line hidden
                EndContext();
                BeginContext(63992, 339, true);
                WriteLiteral(@"/' + id,
                        success: function (data) {
                            location.reload(true);
                        },
                        error: function (jqXhr, textStatus, errorThrown) {
                            if (jqXhr.status == 401) {
                                $(""#SessionTimeoutDialog"").load('");
                EndContext();
                BeginContext(64333, 44, false);
#line 1320 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                                                             Write(Url.Action("LoginWithModalPopup", "Account"));

#line default
#line hidden
                EndContext();
                BeginContext(64378, 3668, true);
                WriteLiteral(@"/',
                                    function (response, status, xhr) {
                                        $(""#SessionTimeoutDialog"").dialog(""open"");
                                    }
                                );
                            }                            
                        }                      
                    });
                });
            }
        }
        function checkUpDownRowVisibility(table) {
            if (!table) {
                var first_row = $(""#tblMatchesFound > tbody > tr:not(.childrow, .trNotFound)"").filter('tr:first')
                var last_row = $(""#tblMatchesFound > tbody > tr:not(.childrow, .trNotFound)"").filter('tr:last');
                $(""#tblMatchesFound tbody tr td a.up"").removeClass(""not-active"");
                $(""#tblMatchesFound tbody tr td a.down"").removeClass(""not-active"");
                if (first_row.length) {
                    first_row.find("".up"").addClass(""not-active"");
                }
     ");
                WriteLiteral(@"           if (last_row.length) {
                    last_row.find("".down"").addClass(""not-active"");
                }
                checkUpDownRowVisibility(""#tblMatchesFound"");
            }
            else {
                /* above implementation with child row */
                $(table + ""  > tbody > tr.childrow"").each(function (i, obj) {
                    var id = table + ""  > tbody > tr.childrow:eq("" + i + "")"";

                    //var id = table + ""  > tbody > tr.childrow"";
                    //var child_first_row = $(obj).find("".matchedFields table > tbody > tr:not(.childrow, .trNotFound)"").filter('tr:first');
                    //var child_last_row = $(obj).find("".matchedFields table > tbody > tr:not(.childrow, .trNotFound)"").filter('tr:last');
                    //var child_last_rows = $(obj).find("".matchedFields table > tbody > tr:not(.childrow, .trNotFound)"");

                    var child_first_row = $(id + "" > td:eq(1) > .matchedFields > div > table > tbody > tr:not(.");
                WriteLiteral(@"childrow, .trNotFound)"").filter('tr:first');
                    var child_last_row = $(id + "" > td:eq(1) > .matchedFields > div > table > tbody > tr:not(.childrow, .trNotFound)"").filter('tr:last');
                    //var child_last_rows = $(id + "" > td:eq(1) > .matchedFields > div > table > tbody > tr:not(.childrow, .trNotFound)"");

                    //$(""#tblMatchesFound  > tbody > tr.childrow:eq(1) > td:eq(1) > .matchedFields > div > table > tbody > tr:not(.childrow, .trNotFound)"")

                    $(obj).find("".matchedFields table > tbody > tr > td > a.up"").removeClass(""not-active"");
                    $(obj).find("".matchedFields table > tbody > tr > td > a.down"").removeClass(""not-active"");
                    if (child_first_row.length) {
                        //console.log(""first row:"" + $(child_first_row).find("".feedKeyPath span"").text());
                        child_first_row.find("".up"").addClass(""not-active"");
                    }
                    if (child_last_row.leng");
                WriteLiteral(@"th) {
                        //console.log(""last row:"" + $(child_last_row).find("".feedKeyPath span"").text());
                        child_last_row.find("".down"").addClass(""not-active"");
                    }

                    if ($(id + "" .matchedFields > div > table > tbody > tr.childrow"").length > 0)
                        checkUpDownRowVisibility(id + "" .matchedFields > div > table"");
                });
            }
        }
    </script>

    <script type=""text/javascript"">
        $(document).ready(function () {
            try {
                var oResult = '");
                EndContext();
                BeginContext(68047, 29, false);
#line 1382 "/Applications/08-07-2019/Jishan/#NetCore/Final/DataLaundryApp/DataLaundryApp/Views/FeedProvider/FeedMappingResult.cshtml"
                          Write(Html.Raw(Model?.Item2?.Count));

#line default
#line hidden
                EndContext();
                BeginContext(68076, 896, true);
                WriteLiteral(@"';
                //if (oResult == 0)
                //$(""#ModelFiled"").modal('show');
            }
            catch (e) {
                console.log(""Error : $(document).ready : "" + e.message);
            }
        });

        function SkipField(elem) {
            try {
                alert('ok');
            }
            catch (e) {
                console.log(""Error : SkipField : "" + e.message);
            }
        }
        $("".chkbgcolor"").change(function () {
            var oCurretTR = $(this).closest(""tr"");
            if ($(this).is("":checked"")) {
                $(oCurretTR).addClass(""skipfiled"", 500);
            }
            else {
                $(oCurretTR).removeClass('skipfiled', 500);
            }

            $("".jsSelectedFiled"").html($("".chkbgcolor:checked"").length + "" Item selected for skip"");
        });
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Tuple<FeedProvider, List<IntelligentFeedMapping>>> Html { get; private set; }
    }
}
#pragma warning restore 1591
