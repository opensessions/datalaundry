@{
    ViewBag.Title = "Feed Providers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewBag.Title</h2>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-title">
                    <div class="row">
                        <div class="col-sm-12 b-r">
                            <button id="btnAddNew" class="btn btn-primary pull-right" onclick="OpenAddFeedProvider();">Add Feed Provider</button>
                        </div>
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-sm-12 b-r">
                            <div class="table-responsive">
                                <table id="FeedProviderDT" class="table table-striped no-margins">
                                    <thead>
                                        <tr>
                                            <th>Source</th>
                                            <th>Data Type</th>
                                            <th>Status</th>
                                            <th>Scheduler Enabled?</th>
                                            <th>Total Event</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="SessionTimeoutDialog" class="modal" style="overflow: hidden;">
    </div>
</div>

@section scripts{
    <script>
        var oTable;
   
        var getNameAndSource = function (data, type, dataToSet) {
                  

            return "<strong style='cursor:pointer;' title='Click to edit' class='jsEditableText'>" + data.Name + "</strong></br></br><div><a target='_blank' href='" + data.Source + "' >" + data.Source + "</a></div>";
        }

        $(document).ready(function Datatb () {
            oTable = $('#FeedProviderDT').dataTable({              
                "dom": '<"top"lf>rt<"bottom"ip><"clear">',
                "bPaginate": true,
                "bFilter": true,
                "autoWidth": true,
                "bServerSide": true,
                "bProcessing": true,
                "pageLength": 10,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                "sAjaxSource": "@Url.Action("GetFeedProviders", "FeedProvider")",
                
                "fnServerData": function  (sSource,aoData,fnCallback) {
               
                   $.getJSON(sSource, aoData, function (json) {
        
                      fnCallback(json)  
                 
                   
                     
                  }).fail(function (jqxhr, textStatus, error) {
                        //alert(jqxhr.status);
                       if (jqxhr.status == 401)
                           window.location.href = '/Account/Login';
                      else
                      
                      toastr.error("Something went wrong. Please try again soon.");
                });
                      
          
          

                },
                
                createdRow: function (row, data, dataIndex) {
                    $(row).find('td:eq(0)').attr('data-editable', 'true').attr('data-id', data.Id).attr("data-name", data.Name);
                    $(row).find('td:eq(0)').addClass('jsMakeEditable');
                    
                
                },
                "aoColumns": [
                    { 'mData': getNameAndSource },
                    { 'mData': 'DataType.Name' },
                    {
                        "mData": function (source) {
                            return source;
                        },
                        "mRender": function (resObj) {
                            var html = '';

                            if (resObj.HasFoundAllFieldMatches) {
                                html = '<i class="text-primary fa fa-2x fa-check-circle" title="all feed keys mapped successfully"></i>';
                            }
                            else {
                                html = '<i class="text-danger fa fa-2x fa-exclamation-circle" title="not all feed keys mapped yet"></i>';
                            }
                            return html;
                        },
                    },
                    {
                        "mData": function (source) {
                            return source;
                        },
                        "mRender": function (resObj) {
                            var html = '';
                            debugger;
                            if (resObj.IsSchedulerEnabled) {
                                html = 'Yes';
                            }
                            else {
                                html = 'No';
                            }
                             //return 
                        return html;
                        },
                    },
                    {
                        "mData": function (source) { return source; },
                    
                        "mRender": function (resObj) {
                            return "<span class=\"font-bold\">" + resObj.TotalEvent + "</span>";
                          
                        }
                    },
                    {
                        "mData": function (source) {
                            return source;
                        },
                        "mRender": function (resObj) {
                            var html = '';
                            @*html += '<a href="@Url.Action("AnalyzeFeed", "FeedProvider")#REPLACEME#" class="btn btn-block btn-success btn-rounded">Analyze</a>';*@
                            html += '<a href="@Url.Action("MapFeed", "FeedProvider")#REPLACEME#" class="btn btn-block btn-success btn-rounded">View Mapping</a>';
                            html = html.replace('#REPLACEME#', '/' + resObj.Id);
                            html += '<a href="@Url.Action("SchedulerSettings", "FeedProvider")#REPLACEME#" class="btn btn-block btn-success btn-rounded">Scheduler Settings</a>';
                            html = html.replace('#REPLACEME#', '/' + resObj.Id);
                            html += '<a href="javascript:void(0);" class="btn btn-block btn-danger btn-rounded" onclick="Delete(' + resObj.Id + ')">Delete</a>';
                            html += '<a href="@Url.Action("ViewSchedulerLog", "FeedProvider")#REPLACEME#" class="btn btn-block btn-success btn-rounded">View Log</a>';
                            html = html.replace('#REPLACEME#', '/' + resObj.Id);
                            html += '<a href="@Url.Action("Page", "FilterRules")#REPLACEME#" asp-controller="FilterRules" asp-action="Index" asp-route-id="'+resObj.Id+'"  class="btn btn-block btn-success btn-rounded">Filter Rules</a>';
                            html = html.replace('#REPLACEME#', '/' + resObj.Id);
                            return html;
                            
                      
                        },

                        "bSortable": false,
                        'searchable': false,
                         
                        


                    } 
                  
                ]
  
            });
            
            /*Editable grid here*/
            $("#FeedProviderDT").on("click", ".jsEditableText",
                function () 
                {                   
                    var oValue = $(this).html();
                    if ($(oValue).attr("data-isedit") == undefined) {
                              location.reload();  
                        $(this).html("<input  oncopy=\"return false\" onpaste=\"return false\" oncut=\"return false\" class='jsEdittableBox' type='text' value='" + oValue + "' data-isedit='true' data-oldvalue='" + oValue + "'>");
                    }
                    $(this).attr("data-isedit", "true");
                    $(".jsEdittableBox").focus();
                    $(".jsEdittableBox").select();
                });

            $("#FeedProviderDT").on("focusout", ".jsEdittableBox",
            function () {                
                var oValue = $(this);
                if ($.trim($(oValue).val()) != "" && $.trim($(oValue).val()) != null) {
                    var FeedProviderId = $(oValue).parent().closest("td").attr("data-id");
                    var OldFeedName = $(oValue).parent().closest("td").attr("data-name");
                    //if ($(oValue).attr("data-oldvalue").toLowerCase() != $(oValue).val().toLowerCase()) {
                    if ($(oValue).attr("data-oldvalue") != $(oValue).val()) {
                        showLoader();
                        /*Server call start*/
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("UpdateFeedProviderName", "FeedProvider")",
                            data: { name: $(oValue).val(), Id: FeedProviderId },
                            success: function (result) {
                                
                                hideLoader();
                                if (result)
                                {
                                    toastr.error('The name already exists, please try another name.');
                                    $(oValue).parent().html(OldFeedName);
                                } else
                                {
                                    toastr.success('successfully update.');
                                    $(oValue).parent().closest("td").attr("data-name", $(oValue).val());
                                }
                            },
                            error: function (jqXhr, textStatus, errorThrown) {
                                hideLoader();
                                if (jqXhr.status == 401) {
                                    $("#SessionTimeoutDialog").load('@(Url.Action("LoginWithModalPopup", "Account"))/',
                                    function (response, status, xhr) {
                                        $("#SessionTimeoutDialog").dialog("open");
                                    });
                                }
                                else
                                    toastr.error("Something went wrong. Please try again soon.");
                            },
                            complete: function () {
                                $(oValue).parent().html($.trim($(oValue).val()));
                                $(oValue).parent().removeAttr("data-isedit");
                                $(oValue).remove();                                
                            }
                        });
                        /*Server call end*/
                    }
                    else {
                        $(oValue).parent().html($.trim($(oValue).val()));
                        $(oValue).parent().removeAttr("data-isedit");
                        $(oValue).remove();
                    }
                }
                else {
                    $(oValue).parent().html($(oValue).attr("data-oldvalue"));
                    $(oValue).parent().removeAttr("data-isedit");
                    $(oValue).remove();
                }

            });
            $("#FeedProviderDT").on("keypress", ".jsEdittableBox",
            function () {
                var regex = new RegExp("^[a-zA-Z0-9]+$");
                var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
                if (!regex.test(key)) {
                    event.preventDefault();
                    return false;
                }
            });
            /*Editable end*/

            $('#SessionTimeoutDialog').dialog({
                autoOpen: false,
                width: 410,
                left: 465,
                resizable: false,
                title: 'Login',
                modal: true,
                open: function (event, ui) {
                    changeDialogPosition();
                    $('#frmLoginPopup').validate({
                        rules: {
                            Email: {
                                required: true
                            },
                            Password: {
                                required: true
                            }
                        },
                        messages: {
                            Email: {
                                required: "This field is required."
                            },
                            Password: {
                                required: "This field is required."
                            }
                        }
                    });
                }
            });
        });
         
        function OpenAddFeedProvider() {
            location.href = '@Url.Action("Create","FeedProvider")';
        }

        function Delete(id) {
            swal({
                title: 'Are you sure to delete this feed provider?',
                text: "You will not be able to recover",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then(function () {
                $.ajax({
                    url: '@Url.Action("Delete", "FeedProvider")',
                    data: { "id": id },
                    type: 'POST',
                    success: function (data, textStatus, jQxhr) {
                        hideLoader();
                        if (data.status == true)
                            oTable.fnDraw();
                        else
                            toastr.error(data.message);
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        hideLoader();
                        if (jqXhr.status == 401) {
                            $("#SessionTimeoutDialog").load('@(Url.Action("LoginWithModalPopup", "Account"))/', function (response, status, xhr) {
                                $("#SessionTimeoutDialog").dialog("open");
                            });
                        }
                        else
                            toastr.error("Something went wrong. Please try again soon.");
                    }
                });
            });
        }

        function changeDialogPosition() {
            $('.modal').dialog("option", "position", { my: "center top", at: "center top+50", of: window });
        }

        function CallFilterRule(elem)
        {
            try
            {
                var oRoute=[];
                oRoute.push("/");
                oRoute.push($(elem).attr("asp-controller"));
                oRoute.push("/");
                oRoute.push($(elem).attr("asp-action"));
                oRoute.push("/");
                oRoute.push($(elem).attr("asp-route-id"));                
                window.location = oRoute.join("");
            }
            catch(e)
            {
                console.log("Error : CallFilterRule "+e.message);
            }
        }

    </script>
}